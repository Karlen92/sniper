%!PS-Adobe-3.0
%%Title: tcas.c
%%For: Simo
%%Creator: a2ps version 4.14
%%CreationDate: Thu Jul 11 09:15:11 2013
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black Blue Green Red 
%%DocumentSuppliedResources: procset a2ps-color-prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  0 setgray
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.5 0.5 1 setrgbcolor
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    1 setgray
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def
%%BeginResource: procset a2ps-color-prolog 2.0 1

%% Definition of the color faces.
/p {
  0 0 0 FG
  false BG
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  0 0 0 FG
  false BG
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false BG
  false UL
  false BX
  0 0 0.9 FG
  fCourier bfs scalefont setfont
  Show
} bind def

/K {
  false BG
  false UL
  false BX
  0 0 0.8 FG
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false BG
  false UL
  false BX
  0.8 0 0 FG
  fCourier bfs scalefont setfont
  Show
} bind def

/C {
  false BG
  false UL
  false BX
  0.8 0 0 FG
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/l {
  0 0 0 FG
  0.8 0.8 0 true BG
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/L {
  0 0 0 FG
  1 1 0 true BG
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/str {
  false BG
  false UL
  false BX
  0 0.5 0 FG
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  1 0 0 true BG
  false UL
  true BX
  1 1 1 FG
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul 2 div neg 0 rmoveto
    f# setfont
    0.8 0.1 0.1 FG
    c-show
  grestore
} bind def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.000000 def
/cw 4.200000 def

% Dictionary for ISO-8859-1 support
/iso1dict 6 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 86.400000 mul
def
/ph
   522.900000 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 5 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.940000 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(1) # () p n
(2) # () S
(/*  -*- Last-Edit:  Fri Jan 29 11:13:27 1993 by Tarak S. Goradia; -*- */) c n
(3) # (/* $Log: tcas.c,v $) N
(4) # ( * Revision 1.2  1993/03/12  19:29:50  foster) N
(5) # ( * Correct logic bug which didn't allow output of 2 - hf) N
(6) # ( * */) N
(7) # () N
(8) # () S
(#include) K
( <stdio.h>) p n
(9) # () N
(10) # () S
(#define) K
( OLEV       600) p 24 T () S 32 T () S
(/* in feets/minute */) c n
(11) # () S
(#define) K
( MAXALTDIFF 600) p 24 T () S 32 T () S
(/* max altitude difference in feet */) c n
(12) # () S
(#define) K
( MINSEP     300          ) p
(/* min separation in feet */) c n
(13) # () S
(#define) K
( NOZCROSS   100) p 24 T () S 32 T () S
(/* in feet */) c n
(14) # () S
() p 8 T () S 16 T () S 24 T () S 32 T () S
(/* variables */) c n
(15) # () N
(16) # () S
(typedef) K
( ) p
(int) k
( bool;) p n
(17) # () N
(18) # () S
(int) k
( Cur_Vertical_Sep;) p n
(19) # (bool High_Confidence;) N
(20) # (bool Two_of_Three_Reports_Valid;) N
(21) # () N
(22) # () S
(int) k
( Own_Tracked_Alt;) p n
(23) # () S
(int) k
( Own_Tracked_Alt_Rate;) p n
(24) # () S
(int) k
( Other_Tracked_Alt;) p n
(25) # () N
(26) # () S
(int) k
( Alt_Layer_Value;) p 24 T () S 32 T () S
(/* 0, 1, 2, 3 */) c n
(27) # () S
(int) k
( Positive_RA_Alt_Thresh[4];) p n
(28) # () N
(29) # () S
(int) k
( Up_Separation;) p n
(30) # () S
(int) k
( Down_Separation;) p n
(31) # () N
(32) # () S 8 T () S 16 T () S 24 T () S 32 T () S
(/* state variables */) c n
(33) # () S
(int) k
( Other_RAC;) p 16 T () S 24 T () S 32 T () S
(/* NO_INTENT, DO_NOT_CLIMB, DO_NOT_DESCEND */) c n
(34) # () S
(#define) K
( NO_INTENT 0) p n
(35) # () S
(#define) K
( DO_NOT_CLIMB 1) p n
(36) # () S
(#define) K
( DO_NOT_DESCEND 2) p n
(37) # () N
(38) # () S
(int) k
( Other_Capability;) p 24 T () S 32 T () S
(/* TCAS_TA, OTHER */) c n
(39) # () S
(#define) K
( TCAS_TA 1) p n
(40) # () S
(#define) K
( OTHER 2) p n
(41) # () N
(42) # () S
(int) k
( Climb_Inhibit;) p 24 T () S 32 T () S
(/* true/false */) c n
(43) # () N
(44) # () S
(#define) K
( UNRESOLVED 0) p n
(45) # () S
(#define) K
( UPWARD_RA 1) p n
(46) # () S
(#define) K
( DOWNWARD_RA 2) p n
(47) # () N
(48) # () S
(void) k
( initialize\(\)) p n
(49) # ({) N
(50) # (    Positive_RA_Alt_Thresh[0] = 400;) N
(51) # (    Positive_RA_Alt_Thresh[1] = 500;) N
(52) # (    Positive_RA_Alt_Thresh[2] = 640;) N
(53) # (    Positive_RA_Alt_Thresh[3] = 740;) N
(54) # (}) N
(55) # () N
(56) # () S
(int) k
( ALIM \(\)) p n
(57) # ({) N
(58) # ( ) S
(return) K
( Positive_RA_Alt_Thresh[Alt_Layer_Value];) p n
(59) # (}) N
(60) # () N
(61) # () S
(int) k
( Inhibit_Biased_Climb \(\)) p n
(62) # ({) N
(63) # (    ) S
(return) K
( \(Climb_Inhibit ? Up_Separation + NOZCROSS : Up_Separation\);) p n
(64) # (}) N
(65) # () N
(66) # (bool Non_Crossing_Biased_Climb\(\)) N
(67) # ({) N
(68) # (    ) S
(int) k
( upward_preferred;) p n
(69) # (    ) S
(int) k
( upward_crossing_situation;) p n
(70) # (    bool result;) N
(71) # () N
(72) # (    upward_preferred = Inhibit_Biased_Climb\(\) > Down_Separation;) N
(73) # (    ) S
(if) K
( \(upward_preferred\)) p n
(74) # (    {) N
(tcas.c) (Page 1/3) (06 oct 09 5:33) title
border
/v 1 store
/x0 x v get 2.940000 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(75) # () p 8 T (result = !\(Own_Below_Threat\(\)\) || \(\(Own_Below_Threat\(\)\) && \(!\(Down_Separ) N
0 T (ation >= ALIM\(\)\)\)\);) N
(76) # (    }) N
(77) # (    ) S
(else) K n
(78) # () S
(    {) p 8 T () N
(79) # () S 8 T (result = Own_Above_Threat\(\) && \(Cur_Vertical_Sep >= MINSEP\) && \(Up_Separ) N
0 T (ation >= ALIM\(\)\);) N
(80) # (    }) N
(81) # (    ) S
(return) K
( result;) p n
(82) # (}) N
(83) # () N
(84) # (bool Non_Crossing_Biased_Descend\(\)) N
(85) # ({) N
(86) # (    ) S
(int) k
( upward_preferred;) p n
(87) # (    ) S
(int) k
( upward_crossing_situation;) p n
(88) # (    bool result;) N
(89) # () N
(90) # (    upward_preferred = Inhibit_Biased_Climb\(\) > Down_Separation;) N
(91) # (    ) S
(if) K
( \(upward_preferred\)) p n
(92) # (    {) N
(93) # () S 8 T (result = Own_Below_Threat\(\) && \(Cur_Vertical_Sep >= MINSEP\) && \(Down_Sep) N
0 T (aration >= ALIM\(\)\);) N
(94) # (    }) N
(95) # (    ) S
(else) K n
(96) # () S
(    {) p n
(97) # () S 8 T (result = !\(Own_Above_Threat\(\)\) || \(\(Own_Above_Threat\(\)\) && \(Up_Separatio) N
0 T (n >= ALIM\(\)\)\);) N
(98) # (    }) N
(99) # (    ) S
(return) K
( result;) p n
(100) # (}) N
(101) # () N
(102) # (bool Own_Below_Threat\(\)) N
(103) # ({) N
(104) # (    ) S
(return) K
( \(Own_Tracked_Alt < Other_Tracked_Alt\);) p n
(105) # (}) N
(106) # () N
(107) # (bool Own_Above_Threat\(\)) N
(108) # ({) N
(109) # (    ) S
(return) K
( \(Other_Tracked_Alt < Own_Tracked_Alt\);) p n
(110) # (}) N
(111) # () N
(112) # () S
(int) k
( alt_sep_test\(\)) p n
(113) # ({) N
(114) # (    bool enabled, tcas_equipped, intent_not_known;) N
(115) # (    bool need_upward_RA, need_downward_RA;) N
(116) # (    ) S
(int) k
( alt_sep;) p n
(117) # () N
(118) # (    enabled = High_Confidence && \(Own_Tracked_Alt_Rate <= OLEV\) && \(Cur_Vertical) N
0 T (_Sep > MAXALTDIFF\);) N
(119) # (    tcas_equipped = Other_Capability == TCAS_TA;) N
(120) # (    intent_not_known = Two_of_Three_Reports_Valid && Other_RAC == NO_INTENT;) N
(121) # (    ) N
(122) # (    alt_sep = UNRESOLVED;) N
(123) # (    ) N
(124) # (    ) S
(if) K
( \(enabled && \(\(tcas_equipped && intent_not_known\) || !tcas_equipped\)\)) p n
(125) # (    {) N
(126) # () S 8 T (need_upward_RA = Non_Crossing_Biased_Climb\(\) && Own_Below_Threat\(\);) N
(127) # () S 8 T (need_downward_RA = Non_Crossing_Biased_Descend\(\) && Own_Above_Threat\(\);) N
(128) # () S 8 T () S
(if) K
( \(need_upward_RA && need_downward_RA\)) p n
(129) # (        ) S
(/* unreachable: requires Own_Below_Threat and Own_Above_Threat) c n
(130) # (           to both be true - that requires Own_Tracked_Alt < Other_Tracked_Alt) N
(131) # (           and Other_Tracked_Alt < Own_Tracked_Alt, which isn't possible */) N
(132) # () S
() p 8 T (    alt_sep = UNRESOLVED;) N
(133) # () S 8 T () S
(else) K
( ) p
(if) K
( \(need_upward_RA\)) p n
(134) # () S 8 T (    alt_sep = UPWARD_RA;) N
(135) # () S 8 T () S
(else) K
( ) p
(if) K
( \(need_downward_RA\)) p n
(136) # () S 8 T (    alt_sep = DOWNWARD_RA;) N
(137) # () S 8 T () S
(else) K n
(138) # () S
() p 8 T (    alt_sep = UNRESOLVED;) N
(139) # (    }) N
(140) # (    ) N
(141) # (    ) S
(return) K
( alt_sep;) p n
(142) # (}) N
(143) # () N
(tcas.c) (Page 2/3) (06 oct 09 5:33) title
border
grestore
(tcas.c) rhead
(tcas.c) (1/2) (Jeudi 11 juillet 2013) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 2.940000 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(144) # (main\(argc, argv\)) p n
(145) # () S
(int) k
( argc;) p n
(146) # () S
(char) k
( *argv[];) p n
(147) # ({) N
(148) # (    ) S
(if) K
(\(argc < 13\)) p n
(149) # (    {) N
(150) # () S 8 T (fprintf\(stdout, ") S
(Error: Command line arguments are\\n) str
("\);) p n
(151) # () S 8 T (fprintf\(stdout, ") S
(Cur_Vertical_Sep, High_Confidence, Two_of_Three_Reports_Valid\\n) str
("\);) p n
(152) # () S 8 T (fprintf\(stdout, ") S
(Own_Tracked_Alt, Own_Tracked_Alt_Rate, Other_Tracked_Alt\\n) str
("\);) p n
(153) # () S 8 T (fprintf\(stdout, ") S
(Alt_Layer_Value, Up_Separation, Down_Separation\\n) str
("\);) p n
(154) # () S 8 T (fprintf\(stdout, ") S
(Other_RAC, Other_Capability, Climb_Inhibit\\n) str
("\);) p n
(155) # () S 8 T (exit\(1\);) N
(156) # (    }) N
(157) # (    initialize\(\);) N
(158) # (    Cur_Vertical_Sep = atoi\(argv[1]\);) N
(159) # (    High_Confidence = atoi\(argv[2]\);) N
(160) # (    Two_of_Three_Reports_Valid = atoi\(argv[3]\);) N
(161) # (    Own_Tracked_Alt = atoi\(argv[4]\);) N
(162) # (    Own_Tracked_Alt_Rate = atoi\(argv[5]\);) N
(163) # (    Other_Tracked_Alt = atoi\(argv[6]\);) N
(164) # (    Alt_Layer_Value = atoi\(argv[7]\);) N
(165) # (    Up_Separation = atoi\(argv[8]\);) N
(166) # (    Down_Separation = atoi\(argv[9]\);) N
(167) # (    Other_RAC = atoi\(argv[10]\);) N
(168) # (    Other_Capability = atoi\(argv[11]\);) N
(169) # (    Climb_Inhibit = atoi\(argv[12]\);) N
(170) # () N
(171) # (    fprintf\(stdout, ") S
(%d\\n) str
(", alt_sep_test\(\)\);) p n
(172) # (    exit\(0\);) N
(173) # (}) N
(tcas.c) (Page 3/3) (06 oct 09 5:33) title
border
grestore
(tcas.c) rhead
(tcas.c) (2/2) (Jeudi 11 juillet 2013) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF

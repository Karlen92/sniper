; ModuleID = './examples/tcas/tcas_noargs.c.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-apple-darwin10.8"

@Positive_RA_Alt_Thresh = common global [4 x i32] zeroinitializer, align 16
@Alt_Layer_Value = common global i32 0
@Climb_Inhibit = common global i32 0
@Up_Separation = common global i32 0
@Own_Tracked_Alt = common global i32 0
@Other_Tracked_Alt = common global i32 0
@Down_Separation = common global i32 0
@Cur_Vertical_Sep = common global i32 0
@High_Confidence = common global i32 0
@Own_Tracked_Alt_Rate = common global i32 0
@Other_Capability = common global i32 0
@Two_of_Three_Reports_Valid = common global i32 0
@Other_RAC = common global i32 0

define void @initialize() nounwind ssp {
entry:
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 0), align 4
  store i32 500, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 1), align 4
  store i32 640, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 2), align 4
  store i32 740, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 3), align 4
  br label %return

return:                                           ; preds = %entry
  ret void
}

define i32 @ALIM() nounwind ssp {
entry:
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @Alt_Layer_Value, align 4
  %1 = sext i32 %0 to i64
  %2 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %1
  %3 = load i32* %2, align 4
  br label %return

return:                                           ; preds = %entry
  ret i32 %3
}

define i32 @Inhibit_Biased_Climb() nounwind ssp {
entry:
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @Climb_Inhibit, align 4
  %1 = icmp ne i32 %0, 0
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = load i32* @Up_Separation, align 4
  %3 = add nsw i32 %2, 100
  br label %bb2

bb1:                                              ; preds = %entry
  %4 = load i32* @Up_Separation, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %iftmp.1.0 = phi i32 [ %3, %bb ], [ %4, %bb1 ]
  br label %return

return:                                           ; preds = %bb2
  ret i32 %iftmp.1.0
}

define i32 @Own_Below_Threat() nounwind ssp {
entry:
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @Own_Tracked_Alt, align 4
  %1 = load i32* @Other_Tracked_Alt, align 4
  %2 = icmp slt i32 %0, %1
  %3 = zext i1 %2 to i32
  br label %return

return:                                           ; preds = %entry
  ret i32 %3
}

define i32 @Own_Above_Threat() nounwind ssp {
entry:
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @Other_Tracked_Alt, align 4
  %1 = load i32* @Own_Tracked_Alt, align 4
  %2 = icmp slt i32 %0, %1
  %3 = zext i1 %2 to i32
  br label %return

return:                                           ; preds = %entry
  ret i32 %3
}

define i32 @Non_Crossing_Biased_Climb() nounwind ssp {
entry:
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @Climb_Inhibit, align 4
  %1 = icmp ne i32 %0, 0
  br i1 %1, label %bb.i, label %bb1.i

bb.i:                                             ; preds = %entry
  %2 = load i32* @Up_Separation, align 4
  %3 = add nsw i32 %2, 100
  br label %Inhibit_Biased_Climb.exit

bb1.i:                                            ; preds = %entry
  %4 = load i32* @Up_Separation, align 4
  br label %Inhibit_Biased_Climb.exit

Inhibit_Biased_Climb.exit:                        ; preds = %bb.i, %bb1.i
  %iftmp.1.0.i = phi i32 [ %3, %bb.i ], [ %4, %bb1.i ]
  %5 = load i32* @Down_Separation, align 4
  %6 = icmp sgt i32 %iftmp.1.0.i, %5
  %7 = zext i1 %6 to i32
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %bb, label %bb6

bb:                                               ; preds = %Inhibit_Biased_Climb.exit
  %9 = load i32* @Own_Tracked_Alt, align 4
  %10 = load i32* @Other_Tracked_Alt, align 4
  %11 = icmp slt i32 %9, %10
  %12 = zext i1 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %14 = load i32* @Own_Tracked_Alt, align 4
  %15 = load i32* @Other_Tracked_Alt, align 4
  %16 = icmp slt i32 %14, %15
  %17 = zext i1 %16 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %19 = load i32* @Alt_Layer_Value, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %20
  %22 = load i32* %21, align 4
  %23 = load i32* @Down_Separation, align 4
  %24 = icmp sge i32 %22, %23
  br i1 %24, label %bb3, label %bb4

bb3:                                              ; preds = %bb2, %bb
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %iftmp.9.0 = phi i32 [ 1, %bb3 ], [ 0, %bb4 ]
  br label %bb12

bb6:                                              ; preds = %Inhibit_Biased_Climb.exit
  %25 = load i32* @Other_Tracked_Alt, align 4
  %26 = load i32* @Own_Tracked_Alt, align 4
  %27 = icmp slt i32 %25, %26
  %28 = zext i1 %27 to i32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %bb10, label %bb7

bb7:                                              ; preds = %bb6
  %30 = load i32* @Cur_Vertical_Sep, align 4
  %31 = icmp sle i32 %30, 299
  br i1 %31, label %bb10, label %bb8

bb8:                                              ; preds = %bb7
  %32 = load i32* @Alt_Layer_Value, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %33
  %35 = load i32* %34, align 4
  %36 = load i32* @Up_Separation, align 4
  %37 = icmp sgt i32 %35, %36
  br i1 %37, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  br label %bb11

bb10:                                             ; preds = %bb8, %bb7, %bb6
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %iftmp.11.0 = phi i32 [ 0, %bb10 ], [ 1, %bb9 ]
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  %result.0 = phi i32 [ %iftmp.9.0, %bb5 ], [ %iftmp.11.0, %bb11 ]
  br label %return

return:                                           ; preds = %bb12
  ret i32 %result.0
}

define i32 @Non_Crossing_Biased_Descend() nounwind ssp {
entry:
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @Climb_Inhibit, align 4
  %1 = icmp ne i32 %0, 0
  br i1 %1, label %bb.i, label %bb1.i

bb.i:                                             ; preds = %entry
  %2 = load i32* @Up_Separation, align 4
  %3 = add nsw i32 %2, 100
  br label %Inhibit_Biased_Climb.exit

bb1.i:                                            ; preds = %entry
  %4 = load i32* @Up_Separation, align 4
  br label %Inhibit_Biased_Climb.exit

Inhibit_Biased_Climb.exit:                        ; preds = %bb.i, %bb1.i
  %iftmp.1.0.i = phi i32 [ %3, %bb.i ], [ %4, %bb1.i ]
  %5 = load i32* @Down_Separation, align 4
  %6 = icmp sgt i32 %iftmp.1.0.i, %5
  %7 = zext i1 %6 to i32
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %bb, label %bb6

bb:                                               ; preds = %Inhibit_Biased_Climb.exit
  %9 = load i32* @Own_Tracked_Alt, align 4
  %10 = load i32* @Other_Tracked_Alt, align 4
  %11 = icmp slt i32 %9, %10
  %12 = zext i1 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %bb4, label %bb1

bb1:                                              ; preds = %bb
  %14 = load i32* @Cur_Vertical_Sep, align 4
  %15 = icmp sle i32 %14, 299
  br i1 %15, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %16 = load i32* @Alt_Layer_Value, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %17
  %19 = load i32* %18, align 4
  %20 = load i32* @Down_Separation, align 4
  %21 = icmp sgt i32 %19, %20
  br i1 %21, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1, %bb
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %iftmp.15.0 = phi i32 [ 0, %bb4 ], [ 1, %bb3 ]
  br label %bb12

bb6:                                              ; preds = %Inhibit_Biased_Climb.exit
  %22 = load i32* @Other_Tracked_Alt, align 4
  %23 = load i32* @Own_Tracked_Alt, align 4
  %24 = icmp slt i32 %22, %23
  %25 = zext i1 %24 to i32
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %bb9, label %bb7

bb7:                                              ; preds = %bb6
  %27 = load i32* @Other_Tracked_Alt, align 4
  %28 = load i32* @Own_Tracked_Alt, align 4
  %29 = icmp slt i32 %27, %28
  %30 = zext i1 %29 to i32
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %bb10, label %bb8

bb8:                                              ; preds = %bb7
  %32 = load i32* @Alt_Layer_Value, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %33
  %35 = load i32* %34, align 4
  %36 = load i32* @Up_Separation, align 4
  %37 = icmp sle i32 %35, %36
  br i1 %37, label %bb9, label %bb10

bb9:                                              ; preds = %bb8, %bb6
  br label %bb11

bb10:                                             ; preds = %bb8, %bb7
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %iftmp.18.0 = phi i32 [ 1, %bb9 ], [ 0, %bb10 ]
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  %result.0 = phi i32 [ %iftmp.15.0, %bb5 ], [ %iftmp.18.0, %bb11 ]
  br label %return

return:                                           ; preds = %bb12
  ret i32 %result.0
}

define i32 @alt_sep_test() nounwind ssp {
entry:
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @High_Confidence, align 4
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %bb3, label %bb

bb:                                               ; preds = %entry
  %2 = load i32* @Own_Tracked_Alt_Rate, align 4
  %3 = icmp sgt i32 %2, 600
  br i1 %3, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %4 = load i32* @Cur_Vertical_Sep, align 4
  %5 = icmp sle i32 %4, 600
  br i1 %5, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  br label %bb4

bb3:                                              ; preds = %bb1, %bb, %entry
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %iftmp.20.0 = phi i32 [ 0, %bb3 ], [ 1, %bb2 ]
  %6 = load i32* @Other_Capability, align 4
  %7 = icmp eq i32 %6, 1
  %8 = zext i1 %7 to i32
  %9 = load i32* @Two_of_Three_Reports_Valid, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb7, label %bb5

bb5:                                              ; preds = %bb4
  %11 = load i32* @Other_RAC, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  br label %bb8

bb7:                                              ; preds = %bb5, %bb4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %iftmp.25.0 = phi i32 [ 0, %bb7 ], [ 1, %bb6 ]
  %13 = icmp ne i32 %iftmp.20.0, 0
  br i1 %13, label %bb9, label %bb28

bb9:                                              ; preds = %bb8
  %14 = icmp eq i32 %8, 0
  br i1 %14, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  %15 = icmp ne i32 %iftmp.25.0, 0
  br i1 %15, label %bb12, label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %bb12, label %bb28

bb12:                                             ; preds = %bb11, %bb10
  %17 = load i32* @Climb_Inhibit, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %bb.i.i, label %bb1.i.i

bb.i.i:                                           ; preds = %bb12
  %19 = load i32* @Up_Separation, align 4
  %20 = add nsw i32 %19, 100
  br label %Inhibit_Biased_Climb.exit.i

bb1.i.i:                                          ; preds = %bb12
  %21 = load i32* @Up_Separation, align 4
  br label %Inhibit_Biased_Climb.exit.i

Inhibit_Biased_Climb.exit.i:                      ; preds = %bb1.i.i, %bb.i.i
  %iftmp.1.0.i.i = phi i32 [ %20, %bb.i.i ], [ %21, %bb1.i.i ]
  %22 = load i32* @Down_Separation, align 4
  %23 = icmp sgt i32 %iftmp.1.0.i.i, %22
  %24 = zext i1 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %bb.i, label %bb6.i

bb.i:                                             ; preds = %Inhibit_Biased_Climb.exit.i
  %26 = load i32* @Own_Tracked_Alt, align 4
  %27 = load i32* @Other_Tracked_Alt, align 4
  %28 = icmp slt i32 %26, %27
  %29 = zext i1 %28 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %bb3.i, label %bb1.i

bb1.i:                                            ; preds = %bb.i
  %31 = load i32* @Own_Tracked_Alt, align 4
  %32 = load i32* @Other_Tracked_Alt, align 4
  %33 = icmp slt i32 %31, %32
  %34 = zext i1 %33 to i32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %bb4.i, label %bb2.i

bb2.i:                                            ; preds = %bb1.i
  %36 = load i32* @Alt_Layer_Value, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %37
  %39 = load i32* %38, align 4
  %40 = load i32* @Down_Separation, align 4
  %41 = icmp sge i32 %39, %40
  br i1 %41, label %bb3.i, label %bb4.i

bb3.i:                                            ; preds = %bb2.i, %bb.i
  br label %bb5.i

bb4.i:                                            ; preds = %bb2.i, %bb1.i
  br label %bb5.i

bb5.i:                                            ; preds = %bb4.i, %bb3.i
  %iftmp.9.0.i = phi i32 [ 1, %bb3.i ], [ 0, %bb4.i ]
  br label %Non_Crossing_Biased_Climb.exit

bb6.i:                                            ; preds = %Inhibit_Biased_Climb.exit.i
  %42 = load i32* @Other_Tracked_Alt, align 4
  %43 = load i32* @Own_Tracked_Alt, align 4
  %44 = icmp slt i32 %42, %43
  %45 = zext i1 %44 to i32
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %bb10.i, label %bb7.i

bb7.i:                                            ; preds = %bb6.i
  %47 = load i32* @Cur_Vertical_Sep, align 4
  %48 = icmp sle i32 %47, 299
  br i1 %48, label %bb10.i, label %bb8.i

bb8.i:                                            ; preds = %bb7.i
  %49 = load i32* @Alt_Layer_Value, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %50
  %52 = load i32* %51, align 4
  %53 = load i32* @Up_Separation, align 4
  %54 = icmp sgt i32 %52, %53
  br i1 %54, label %bb10.i, label %bb9.i

bb9.i:                                            ; preds = %bb8.i
  br label %bb11.i

bb10.i:                                           ; preds = %bb8.i, %bb7.i, %bb6.i
  br label %bb11.i

bb11.i:                                           ; preds = %bb10.i, %bb9.i
  %iftmp.11.0.i = phi i32 [ 0, %bb10.i ], [ 1, %bb9.i ]
  br label %Non_Crossing_Biased_Climb.exit

Non_Crossing_Biased_Climb.exit:                   ; preds = %bb5.i, %bb11.i
  %result.0.i = phi i32 [ %iftmp.9.0.i, %bb5.i ], [ %iftmp.11.0.i, %bb11.i ]
  %55 = icmp eq i32 %result.0.i, 0
  br i1 %55, label %bb15, label %bb13

bb13:                                             ; preds = %Non_Crossing_Biased_Climb.exit
  %56 = load i32* @Own_Tracked_Alt, align 4
  %57 = load i32* @Other_Tracked_Alt, align 4
  %58 = icmp slt i32 %56, %57
  %59 = zext i1 %58 to i32
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  br label %bb16

bb15:                                             ; preds = %bb13, %Non_Crossing_Biased_Climb.exit
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %iftmp.28.0 = phi i32 [ 0, %bb15 ], [ 1, %bb14 ]
  %61 = load i32* @Climb_Inhibit, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %bb.i.i1, label %bb1.i.i2

bb.i.i1:                                          ; preds = %bb16
  %63 = load i32* @Up_Separation, align 4
  %64 = add nsw i32 %63, 100
  br label %Inhibit_Biased_Climb.exit.i4

bb1.i.i2:                                         ; preds = %bb16
  %65 = load i32* @Up_Separation, align 4
  br label %Inhibit_Biased_Climb.exit.i4

Inhibit_Biased_Climb.exit.i4:                     ; preds = %bb1.i.i2, %bb.i.i1
  %iftmp.1.0.i.i3 = phi i32 [ %64, %bb.i.i1 ], [ %65, %bb1.i.i2 ]
  %66 = load i32* @Down_Separation, align 4
  %67 = icmp sgt i32 %iftmp.1.0.i.i3, %66
  %68 = zext i1 %67 to i32
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %bb.i5, label %bb6.i11

bb.i5:                                            ; preds = %Inhibit_Biased_Climb.exit.i4
  %70 = load i32* @Own_Tracked_Alt, align 4
  %71 = load i32* @Other_Tracked_Alt, align 4
  %72 = icmp slt i32 %70, %71
  %73 = zext i1 %72 to i32
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %bb4.i9, label %bb1.i6

bb1.i6:                                           ; preds = %bb.i5
  %75 = load i32* @Cur_Vertical_Sep, align 4
  %76 = icmp sle i32 %75, 299
  br i1 %76, label %bb4.i9, label %bb2.i7

bb2.i7:                                           ; preds = %bb1.i6
  %77 = load i32* @Alt_Layer_Value, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %78
  %80 = load i32* %79, align 4
  %81 = load i32* @Down_Separation, align 4
  %82 = icmp sgt i32 %80, %81
  br i1 %82, label %bb4.i9, label %bb3.i8

bb3.i8:                                           ; preds = %bb2.i7
  br label %bb5.i10

bb4.i9:                                           ; preds = %bb2.i7, %bb1.i6, %bb.i5
  br label %bb5.i10

bb5.i10:                                          ; preds = %bb4.i9, %bb3.i8
  %iftmp.15.0.i = phi i32 [ 0, %bb4.i9 ], [ 1, %bb3.i8 ]
  br label %Non_Crossing_Biased_Descend.exit

bb6.i11:                                          ; preds = %Inhibit_Biased_Climb.exit.i4
  %83 = load i32* @Other_Tracked_Alt, align 4
  %84 = load i32* @Own_Tracked_Alt, align 4
  %85 = icmp slt i32 %83, %84
  %86 = zext i1 %85 to i32
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %bb9.i14, label %bb7.i12

bb7.i12:                                          ; preds = %bb6.i11
  %88 = load i32* @Other_Tracked_Alt, align 4
  %89 = load i32* @Own_Tracked_Alt, align 4
  %90 = icmp slt i32 %88, %89
  %91 = zext i1 %90 to i32
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %bb10.i15, label %bb8.i13

bb8.i13:                                          ; preds = %bb7.i12
  %93 = load i32* @Alt_Layer_Value, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %94
  %96 = load i32* %95, align 4
  %97 = load i32* @Up_Separation, align 4
  %98 = icmp sle i32 %96, %97
  br i1 %98, label %bb9.i14, label %bb10.i15

bb9.i14:                                          ; preds = %bb8.i13, %bb6.i11
  br label %bb11.i16

bb10.i15:                                         ; preds = %bb8.i13, %bb7.i12
  br label %bb11.i16

bb11.i16:                                         ; preds = %bb10.i15, %bb9.i14
  %iftmp.18.0.i = phi i32 [ 1, %bb9.i14 ], [ 0, %bb10.i15 ]
  br label %Non_Crossing_Biased_Descend.exit

Non_Crossing_Biased_Descend.exit:                 ; preds = %bb5.i10, %bb11.i16
  %result.0.i17 = phi i32 [ %iftmp.15.0.i, %bb5.i10 ], [ %iftmp.18.0.i, %bb11.i16 ]
  %99 = icmp eq i32 %result.0.i17, 0
  br i1 %99, label %bb19, label %bb17

bb17:                                             ; preds = %Non_Crossing_Biased_Descend.exit
  %100 = load i32* @Other_Tracked_Alt, align 4
  %101 = load i32* @Own_Tracked_Alt, align 4
  %102 = icmp slt i32 %100, %101
  %103 = zext i1 %102 to i32
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb20

bb19:                                             ; preds = %bb17, %Non_Crossing_Biased_Descend.exit
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %iftmp.29.0 = phi i32 [ 0, %bb19 ], [ 1, %bb18 ]
  %105 = icmp eq i32 %iftmp.28.0, 0
  br i1 %105, label %bb23, label %bb21

bb21:                                             ; preds = %bb20
  %106 = icmp eq i32 %iftmp.29.0, 0
  br i1 %106, label %bb23, label %bb22

bb22:                                             ; preds = %bb21
  br label %bb28

bb23:                                             ; preds = %bb21, %bb20
  %107 = icmp ne i32 %iftmp.28.0, 0
  br i1 %107, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  br label %bb28

bb25:                                             ; preds = %bb23
  %108 = icmp ne i32 %iftmp.29.0, 0
  br i1 %108, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  br label %bb28

bb27:                                             ; preds = %bb25
  br label %bb28

bb28:                                             ; preds = %bb27, %bb26, %bb24, %bb22, %bb11, %bb8
  %alt_sep.0 = phi i32 [ 1, %bb24 ], [ 2, %bb26 ], [ 0, %bb27 ], [ 0, %bb22 ], [ 0, %bb11 ], [ 0, %bb8 ]
  br label %return

return:                                           ; preds = %bb28
  ret i32 %alt_sep.0
}

define i32 @main(i32 %a, i32 %b, i32 %c, i32 %d, i32 %e, i32 %f, i32 %g, i32 %h, i32 %i, i32 %j, i32 %k, i32 %l) nounwind ssp {
entry:
  %"alloca point" = bitcast i32 0 to i32
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 0), align 4
  store i32 500, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 1), align 4
  store i32 640, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 2), align 4
  store i32 740, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 3), align 4
  store i32 %a, i32* @Cur_Vertical_Sep, align 4
  store i32 %b, i32* @High_Confidence, align 4
  store i32 %c, i32* @Two_of_Three_Reports_Valid, align 4
  store i32 %d, i32* @Own_Tracked_Alt, align 4
  store i32 %e, i32* @Own_Tracked_Alt_Rate, align 4
  store i32 %f, i32* @Other_Tracked_Alt, align 4
  store i32 %g, i32* @Alt_Layer_Value, align 4
  store i32 %h, i32* @Up_Separation, align 4
  store i32 %i, i32* @Down_Separation, align 4
  store i32 %j, i32* @Other_RAC, align 4
  store i32 %k, i32* @Other_Capability, align 4
  store i32 %l, i32* @Climb_Inhibit, align 4
  %0 = load i32* @High_Confidence, align 4
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %bb3.i, label %bb.i

bb.i:                                             ; preds = %entry
  %2 = load i32* @Own_Tracked_Alt_Rate, align 4
  %3 = icmp sgt i32 %2, 600
  br i1 %3, label %bb3.i, label %bb1.i

bb1.i:                                            ; preds = %bb.i
  %4 = load i32* @Cur_Vertical_Sep, align 4
  %5 = icmp sle i32 %4, 600
  br i1 %5, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %bb1.i
  br label %bb4.i

bb3.i:                                            ; preds = %bb1.i, %bb.i, %entry
  br label %bb4.i

bb4.i:                                            ; preds = %bb3.i, %bb2.i
  %iftmp.20.0.i = phi i32 [ 0, %bb3.i ], [ 1, %bb2.i ]
  %6 = load i32* @Other_Capability, align 4
  %7 = icmp eq i32 %6, 1
  %8 = zext i1 %7 to i32
  %9 = load i32* @Two_of_Three_Reports_Valid, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb7.i, label %bb5.i

bb5.i:                                            ; preds = %bb4.i
  %11 = load i32* @Other_RAC, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %bb7.i, label %bb6.i

bb6.i:                                            ; preds = %bb5.i
  br label %bb8.i

bb7.i:                                            ; preds = %bb5.i, %bb4.i
  br label %bb8.i

bb8.i:                                            ; preds = %bb7.i, %bb6.i
  %iftmp.25.0.i = phi i32 [ 0, %bb7.i ], [ 1, %bb6.i ]
  %13 = icmp ne i32 %iftmp.20.0.i, 0
  br i1 %13, label %bb9.i, label %alt_sep_test.exit

bb9.i:                                            ; preds = %bb8.i
  %14 = icmp eq i32 %8, 0
  br i1 %14, label %bb11.i, label %bb10.i

bb10.i:                                           ; preds = %bb9.i
  %15 = icmp ne i32 %iftmp.25.0.i, 0
  br i1 %15, label %bb12.i, label %bb11.i

bb11.i:                                           ; preds = %bb10.i, %bb9.i
  %16 = icmp eq i32 %8, 0
  br i1 %16, label %bb12.i, label %alt_sep_test.exit

bb12.i:                                           ; preds = %bb11.i, %bb10.i
  %17 = load i32* @Climb_Inhibit, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %bb.i.i.i, label %bb1.i.i.i

bb.i.i.i:                                         ; preds = %bb12.i
  %19 = load i32* @Up_Separation, align 4
  %20 = add nsw i32 %19, 100
  br label %Inhibit_Biased_Climb.exit.i.i

bb1.i.i.i:                                        ; preds = %bb12.i
  %21 = load i32* @Up_Separation, align 4
  br label %Inhibit_Biased_Climb.exit.i.i

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %bb1.i.i.i, %bb.i.i.i
  %iftmp.1.0.i.i.i = phi i32 [ %20, %bb.i.i.i ], [ %21, %bb1.i.i.i ]
  %22 = load i32* @Down_Separation, align 4
  %23 = icmp sgt i32 %iftmp.1.0.i.i.i, %22
  %24 = zext i1 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %bb.i.i, label %bb6.i.i

bb.i.i:                                           ; preds = %Inhibit_Biased_Climb.exit.i.i
  %26 = load i32* @Own_Tracked_Alt, align 4
  %27 = load i32* @Other_Tracked_Alt, align 4
  %28 = icmp slt i32 %26, %27
  %29 = zext i1 %28 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %bb3.i.i, label %bb1.i.i

bb1.i.i:                                          ; preds = %bb.i.i
  %31 = load i32* @Own_Tracked_Alt, align 4
  %32 = load i32* @Other_Tracked_Alt, align 4
  %33 = icmp slt i32 %31, %32
  %34 = zext i1 %33 to i32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %bb4.i.i, label %bb2.i.i

bb2.i.i:                                          ; preds = %bb1.i.i
  %36 = load i32* @Alt_Layer_Value, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %37
  %39 = load i32* %38, align 4
  %40 = load i32* @Down_Separation, align 4
  %41 = icmp sge i32 %39, %40
  br i1 %41, label %bb3.i.i, label %bb4.i.i

bb3.i.i:                                          ; preds = %bb2.i.i, %bb.i.i
  br label %bb5.i.i

bb4.i.i:                                          ; preds = %bb2.i.i, %bb1.i.i
  br label %bb5.i.i

bb5.i.i:                                          ; preds = %bb4.i.i, %bb3.i.i
  %iftmp.9.0.i.i = phi i32 [ 1, %bb3.i.i ], [ 0, %bb4.i.i ]
  br label %Non_Crossing_Biased_Climb.exit.i

bb6.i.i:                                          ; preds = %Inhibit_Biased_Climb.exit.i.i
  %42 = load i32* @Other_Tracked_Alt, align 4
  %43 = load i32* @Own_Tracked_Alt, align 4
  %44 = icmp slt i32 %42, %43
  %45 = zext i1 %44 to i32
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %bb10.i.i, label %bb7.i.i

bb7.i.i:                                          ; preds = %bb6.i.i
  %47 = load i32* @Cur_Vertical_Sep, align 4
  %48 = icmp sle i32 %47, 299
  br i1 %48, label %bb10.i.i, label %bb8.i.i

bb8.i.i:                                          ; preds = %bb7.i.i
  %49 = load i32* @Alt_Layer_Value, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %50
  %52 = load i32* %51, align 4
  %53 = load i32* @Up_Separation, align 4
  %54 = icmp sgt i32 %52, %53
  br i1 %54, label %bb10.i.i, label %bb9.i.i

bb9.i.i:                                          ; preds = %bb8.i.i
  br label %bb11.i.i

bb10.i.i:                                         ; preds = %bb8.i.i, %bb7.i.i, %bb6.i.i
  br label %bb11.i.i

bb11.i.i:                                         ; preds = %bb10.i.i, %bb9.i.i
  %iftmp.11.0.i.i = phi i32 [ 0, %bb10.i.i ], [ 1, %bb9.i.i ]
  br label %Non_Crossing_Biased_Climb.exit.i

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %bb11.i.i, %bb5.i.i
  %result.0.i.i = phi i32 [ %iftmp.9.0.i.i, %bb5.i.i ], [ %iftmp.11.0.i.i, %bb11.i.i ]
  %55 = icmp eq i32 %result.0.i.i, 0
  br i1 %55, label %bb15.i, label %bb13.i

bb13.i:                                           ; preds = %Non_Crossing_Biased_Climb.exit.i
  %56 = load i32* @Own_Tracked_Alt, align 4
  %57 = load i32* @Other_Tracked_Alt, align 4
  %58 = icmp slt i32 %56, %57
  %59 = zext i1 %58 to i32
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %bb15.i, label %bb14.i

bb14.i:                                           ; preds = %bb13.i
  br label %bb16.i

bb15.i:                                           ; preds = %bb13.i, %Non_Crossing_Biased_Climb.exit.i
  br label %bb16.i

bb16.i:                                           ; preds = %bb15.i, %bb14.i
  %iftmp.28.0.i = phi i32 [ 0, %bb15.i ], [ 1, %bb14.i ]
  %61 = load i32* @Climb_Inhibit, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %bb.i.i1.i, label %bb1.i.i2.i

bb.i.i1.i:                                        ; preds = %bb16.i
  %63 = load i32* @Up_Separation, align 4
  %64 = add nsw i32 %63, 100
  br label %Inhibit_Biased_Climb.exit.i4.i

bb1.i.i2.i:                                       ; preds = %bb16.i
  %65 = load i32* @Up_Separation, align 4
  br label %Inhibit_Biased_Climb.exit.i4.i

Inhibit_Biased_Climb.exit.i4.i:                   ; preds = %bb1.i.i2.i, %bb.i.i1.i
  %iftmp.1.0.i.i3.i = phi i32 [ %64, %bb.i.i1.i ], [ %65, %bb1.i.i2.i ]
  %66 = load i32* @Down_Separation, align 4
  %67 = icmp sgt i32 %iftmp.1.0.i.i3.i, %66
  %68 = zext i1 %67 to i32
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %bb.i5.i, label %bb6.i11.i

bb.i5.i:                                          ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %70 = load i32* @Own_Tracked_Alt, align 4
  %71 = load i32* @Other_Tracked_Alt, align 4
  %72 = icmp slt i32 %70, %71
  %73 = zext i1 %72 to i32
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %bb4.i9.i, label %bb1.i6.i

bb1.i6.i:                                         ; preds = %bb.i5.i
  %75 = load i32* @Cur_Vertical_Sep, align 4
  %76 = icmp sle i32 %75, 299
  br i1 %76, label %bb4.i9.i, label %bb2.i7.i

bb2.i7.i:                                         ; preds = %bb1.i6.i
  %77 = load i32* @Alt_Layer_Value, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %78
  %80 = load i32* %79, align 4
  %81 = load i32* @Down_Separation, align 4
  %82 = icmp sgt i32 %80, %81
  br i1 %82, label %bb4.i9.i, label %bb3.i8.i

bb3.i8.i:                                         ; preds = %bb2.i7.i
  br label %bb5.i10.i

bb4.i9.i:                                         ; preds = %bb2.i7.i, %bb1.i6.i, %bb.i5.i
  br label %bb5.i10.i

bb5.i10.i:                                        ; preds = %bb4.i9.i, %bb3.i8.i
  %iftmp.15.0.i.i = phi i32 [ 0, %bb4.i9.i ], [ 1, %bb3.i8.i ]
  br label %Non_Crossing_Biased_Descend.exit.i

bb6.i11.i:                                        ; preds = %Inhibit_Biased_Climb.exit.i4.i
  %83 = load i32* @Other_Tracked_Alt, align 4
  %84 = load i32* @Own_Tracked_Alt, align 4
  %85 = icmp slt i32 %83, %84
  %86 = zext i1 %85 to i32
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %bb9.i14.i, label %bb7.i12.i

bb7.i12.i:                                        ; preds = %bb6.i11.i
  %88 = load i32* @Other_Tracked_Alt, align 4
  %89 = load i32* @Own_Tracked_Alt, align 4
  %90 = icmp slt i32 %88, %89
  %91 = zext i1 %90 to i32
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %bb10.i15.i, label %bb8.i13.i

bb8.i13.i:                                        ; preds = %bb7.i12.i
  %93 = load i32* @Alt_Layer_Value, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %94
  %96 = load i32* %95, align 4
  %97 = load i32* @Up_Separation, align 4
  %98 = icmp sle i32 %96, %97
  br i1 %98, label %bb9.i14.i, label %bb10.i15.i

bb9.i14.i:                                        ; preds = %bb8.i13.i, %bb6.i11.i
  br label %bb11.i16.i

bb10.i15.i:                                       ; preds = %bb8.i13.i, %bb7.i12.i
  br label %bb11.i16.i

bb11.i16.i:                                       ; preds = %bb10.i15.i, %bb9.i14.i
  %iftmp.18.0.i.i = phi i32 [ 1, %bb9.i14.i ], [ 0, %bb10.i15.i ]
  br label %Non_Crossing_Biased_Descend.exit.i

Non_Crossing_Biased_Descend.exit.i:               ; preds = %bb11.i16.i, %bb5.i10.i
  %result.0.i17.i = phi i32 [ %iftmp.15.0.i.i, %bb5.i10.i ], [ %iftmp.18.0.i.i, %bb11.i16.i ]
  %99 = icmp eq i32 %result.0.i17.i, 0
  br i1 %99, label %bb19.i, label %bb17.i

bb17.i:                                           ; preds = %Non_Crossing_Biased_Descend.exit.i
  %100 = load i32* @Other_Tracked_Alt, align 4
  %101 = load i32* @Own_Tracked_Alt, align 4
  %102 = icmp slt i32 %100, %101
  %103 = zext i1 %102 to i32
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %bb19.i, label %bb18.i

bb18.i:                                           ; preds = %bb17.i
  br label %bb20.i

bb19.i:                                           ; preds = %bb17.i, %Non_Crossing_Biased_Descend.exit.i
  br label %bb20.i

bb20.i:                                           ; preds = %bb19.i, %bb18.i
  %iftmp.29.0.i = phi i32 [ 0, %bb19.i ], [ 1, %bb18.i ]
  %105 = icmp eq i32 %iftmp.28.0.i, 0
  br i1 %105, label %bb23.i, label %bb21.i

bb21.i:                                           ; preds = %bb20.i
  %106 = icmp eq i32 %iftmp.29.0.i, 0
  br i1 %106, label %bb23.i, label %bb22.i

bb22.i:                                           ; preds = %bb21.i
  br label %alt_sep_test.exit

bb23.i:                                           ; preds = %bb21.i, %bb20.i
  %107 = icmp ne i32 %iftmp.28.0.i, 0
  br i1 %107, label %bb24.i, label %bb25.i

bb24.i:                                           ; preds = %bb23.i
  br label %alt_sep_test.exit

bb25.i:                                           ; preds = %bb23.i
  %108 = icmp ne i32 %iftmp.29.0.i, 0
  br i1 %108, label %bb26.i, label %bb27.i

bb26.i:                                           ; preds = %bb25.i
  br label %alt_sep_test.exit

bb27.i:                                           ; preds = %bb25.i
  br label %alt_sep_test.exit

alt_sep_test.exit:                                ; preds = %bb8.i, %bb11.i, %bb22.i, %bb24.i, %bb26.i, %bb27.i
  %alt_sep.0.i = phi i32 [ 1, %bb24.i ], [ 2, %bb26.i ], [ 0, %bb27.i ], [ 0, %bb22.i ], [ 0, %bb11.i ], [ 0, %bb8.i ]
  %109 = icmp eq i32 %alt_sep.0.i, 1
  %110 = zext i1 %109 to i32
  %111 = call i32 (...)* @assert(i32 %110) nounwind
  br label %return

return:                                           ; preds = %alt_sep_test.exit
  ret i32 0
}

declare i32 @assert(...)

; ModuleID = './examples/tcas_mod1.c.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-apple-darwin10.8"

@Positive_RA_Alt_Thresh = common global [4 x i32] zeroinitializer, align 16
@Own_Tracked_Alt = common global i32 0
@Other_Tracked_Alt = common global i32 0
@Alt_Layer_Value = common global i32 0
@Climb_Inhibit = common global i32 0
@Up_Separation = common global i32 0
@Down_Separation = common global i32 0
@Cur_Vertical_Sep = common global i32 0
@High_Confidence = common global i32 0
@Own_Tracked_Alt_Rate = common global i32 0
@Other_Capability = common global i32 0
@Two_of_Three_Reports_Valid = common global i32 0
@Other_RAC = common global i32 0

define void @initialize() nounwind ssp {
entry:
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 0), align 4
  store i32 500, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 1), align 4
  store i32 640, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 2), align 4
  store i32 740, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 3), align 4
  br label %return

return:                                           ; preds = %entry
  ret void
}

define i32 @Own_Below_Threat() nounwind ssp {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @Own_Tracked_Alt, align 4
  %2 = load i32* @Other_Tracked_Alt, align 4
  %3 = icmp slt i32 %1, %2
  %4 = zext i1 %3 to i32
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  br label %return

return:                                           ; preds = %entry
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @Own_Above_Threat() nounwind ssp {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @Other_Tracked_Alt, align 4
  %2 = load i32* @Own_Tracked_Alt, align 4
  %3 = icmp slt i32 %1, %2
  %4 = zext i1 %3 to i32
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  br label %return

return:                                           ; preds = %entry
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @ALIM() nounwind ssp {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @Alt_Layer_Value, align 4
  %2 = sext i32 %1 to i64
  %3 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %2
  %4 = load i32* %3, align 4
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  br label %return

return:                                           ; preds = %entry
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @Inhibit_Biased_Climb() nounwind ssp {
entry:
  %retval = alloca i32
  %iftmp.5 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @Climb_Inhibit, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load i32* @Up_Separation, align 4
  %4 = add nsw i32 %3, 100
  store i32 %4, i32* %iftmp.5, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %5 = load i32* @Up_Separation, align 4
  store i32 %5, i32* %iftmp.5, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %6 = load i32* %iftmp.5, align 4
  store i32 %6, i32* %0, align 4
  %7 = load i32* %0, align 4
  store i32 %7, i32* %retval, align 4
  br label %return

return:                                           ; preds = %bb2
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @Non_Crossing_Biased_Climb() nounwind ssp {
entry:
  %retval.i8 = alloca i32
  %0 = alloca i32
  %retval.i6 = alloca i32
  %1 = alloca i32
  %retval.i4 = alloca i32
  %2 = alloca i32
  %retval.i2 = alloca i32
  %3 = alloca i32
  %retval.i1 = alloca i32
  %4 = alloca i32
  %retval.i = alloca i32
  %iftmp.5.i = alloca i32
  %5 = alloca i32
  %retval = alloca i32
  %6 = alloca i32
  %iftmp.11 = alloca i32
  %iftmp.9 = alloca i32
  %upward_preferred = alloca i32
  %upward_crossing_situation = alloca i32
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %7 = load i32* @Climb_Inhibit, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %bb.i, label %bb1.i

bb.i:                                             ; preds = %entry
  %9 = load i32* @Up_Separation, align 4
  %10 = add nsw i32 %9, 100
  store i32 %10, i32* %iftmp.5.i, align 4
  br label %Inhibit_Biased_Climb.exit

bb1.i:                                            ; preds = %entry
  %11 = load i32* @Up_Separation, align 4
  store i32 %11, i32* %iftmp.5.i, align 4
  br label %Inhibit_Biased_Climb.exit

Inhibit_Biased_Climb.exit:                        ; preds = %bb.i, %bb1.i
  %12 = load i32* %iftmp.5.i, align 4
  store i32 %12, i32* %5, align 4
  %13 = load i32* %5, align 4
  store i32 %13, i32* %retval.i, align 4
  %retval3.i = load i32* %retval.i
  %14 = load i32* @Down_Separation, align 4
  %15 = icmp sgt i32 %retval3.i, %14
  %16 = zext i1 %15 to i32
  store i32 %16, i32* %upward_preferred, align 4
  %17 = load i32* %upward_preferred, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %bb, label %bb6

bb:                                               ; preds = %Inhibit_Biased_Climb.exit
  %19 = load i32* @Own_Tracked_Alt, align 4
  %20 = load i32* @Other_Tracked_Alt, align 4
  %21 = icmp slt i32 %19, %20
  %22 = zext i1 %21 to i32
  store i32 %22, i32* %0, align 4
  %23 = load i32* %0, align 4
  store i32 %23, i32* %retval.i8, align 4
  %retval1.i9 = load i32* %retval.i8
  %24 = icmp eq i32 %retval1.i9, 0
  br i1 %24, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %25 = load i32* @Own_Tracked_Alt, align 4
  %26 = load i32* @Other_Tracked_Alt, align 4
  %27 = icmp slt i32 %25, %26
  %28 = zext i1 %27 to i32
  store i32 %28, i32* %1, align 4
  %29 = load i32* %1, align 4
  store i32 %29, i32* %retval.i6, align 4
  %retval1.i7 = load i32* %retval.i6
  %30 = icmp eq i32 %retval1.i7, 0
  br i1 %30, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %31 = load i32* @Alt_Layer_Value, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %32
  %34 = load i32* %33, align 4
  store i32 %34, i32* %2, align 4
  %35 = load i32* %2, align 4
  store i32 %35, i32* %retval.i4, align 4
  %retval1.i5 = load i32* %retval.i4
  %36 = load i32* @Down_Separation, align 4
  %37 = icmp sgt i32 %retval1.i5, %36
  br i1 %37, label %bb3, label %bb4

bb3:                                              ; preds = %bb2, %bb
  store i32 1, i32* %iftmp.9, align 4
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1
  store i32 0, i32* %iftmp.9, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %38 = load i32* %iftmp.9, align 4
  store i32 %38, i32* %result, align 4
  br label %bb12

bb6:                                              ; preds = %Inhibit_Biased_Climb.exit
  %39 = load i32* @Other_Tracked_Alt, align 4
  %40 = load i32* @Own_Tracked_Alt, align 4
  %41 = icmp slt i32 %39, %40
  %42 = zext i1 %41 to i32
  store i32 %42, i32* %3, align 4
  %43 = load i32* %3, align 4
  store i32 %43, i32* %retval.i2, align 4
  %retval1.i3 = load i32* %retval.i2
  %44 = icmp eq i32 %retval1.i3, 0
  br i1 %44, label %bb10, label %bb7

bb7:                                              ; preds = %bb6
  %45 = load i32* @Cur_Vertical_Sep, align 4
  %46 = icmp sle i32 %45, 299
  br i1 %46, label %bb10, label %bb8

bb8:                                              ; preds = %bb7
  %47 = load i32* @Alt_Layer_Value, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %48
  %50 = load i32* %49, align 4
  store i32 %50, i32* %4, align 4
  %51 = load i32* %4, align 4
  store i32 %51, i32* %retval.i1, align 4
  %retval1.i = load i32* %retval.i1
  %52 = load i32* @Up_Separation, align 4
  %53 = icmp sgt i32 %retval1.i, %52
  br i1 %53, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  store i32 1, i32* %iftmp.11, align 4
  br label %bb11

bb10:                                             ; preds = %bb8, %bb7, %bb6
  store i32 0, i32* %iftmp.11, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %54 = load i32* %iftmp.11, align 4
  store i32 %54, i32* %result, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  %55 = load i32* %result, align 4
  store i32 %55, i32* %6, align 4
  %56 = load i32* %6, align 4
  store i32 %56, i32* %retval, align 4
  br label %return

return:                                           ; preds = %bb12
  %retval13 = load i32* %retval
  ret i32 %retval13
}

define i32 @Non_Crossing_Biased_Descend() nounwind ssp {
entry:
  %retval.i8 = alloca i32
  %0 = alloca i32
  %retval.i6 = alloca i32
  %1 = alloca i32
  %retval.i4 = alloca i32
  %2 = alloca i32
  %retval.i2 = alloca i32
  %3 = alloca i32
  %retval.i1 = alloca i32
  %4 = alloca i32
  %retval.i = alloca i32
  %iftmp.5.i = alloca i32
  %5 = alloca i32
  %retval = alloca i32
  %6 = alloca i32
  %iftmp.18 = alloca i32
  %iftmp.15 = alloca i32
  %upward_preferred = alloca i32
  %upward_crossing_situation = alloca i32
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %7 = load i32* @Climb_Inhibit, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %bb.i, label %bb1.i

bb.i:                                             ; preds = %entry
  %9 = load i32* @Up_Separation, align 4
  %10 = add nsw i32 %9, 100
  store i32 %10, i32* %iftmp.5.i, align 4
  br label %Inhibit_Biased_Climb.exit

bb1.i:                                            ; preds = %entry
  %11 = load i32* @Up_Separation, align 4
  store i32 %11, i32* %iftmp.5.i, align 4
  br label %Inhibit_Biased_Climb.exit

Inhibit_Biased_Climb.exit:                        ; preds = %bb.i, %bb1.i
  %12 = load i32* %iftmp.5.i, align 4
  store i32 %12, i32* %5, align 4
  %13 = load i32* %5, align 4
  store i32 %13, i32* %retval.i, align 4
  %retval3.i = load i32* %retval.i
  %14 = load i32* @Down_Separation, align 4
  %15 = icmp sgt i32 %retval3.i, %14
  %16 = zext i1 %15 to i32
  store i32 %16, i32* %upward_preferred, align 4
  %17 = load i32* %upward_preferred, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %bb, label %bb6

bb:                                               ; preds = %Inhibit_Biased_Climb.exit
  %19 = load i32* @Own_Tracked_Alt, align 4
  %20 = load i32* @Other_Tracked_Alt, align 4
  %21 = icmp slt i32 %19, %20
  %22 = zext i1 %21 to i32
  store i32 %22, i32* %0, align 4
  %23 = load i32* %0, align 4
  store i32 %23, i32* %retval.i8, align 4
  %retval1.i9 = load i32* %retval.i8
  %24 = icmp eq i32 %retval1.i9, 0
  br i1 %24, label %bb4, label %bb1

bb1:                                              ; preds = %bb
  %25 = load i32* @Cur_Vertical_Sep, align 4
  %26 = icmp sle i32 %25, 299
  br i1 %26, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %27 = load i32* @Alt_Layer_Value, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %28
  %30 = load i32* %29, align 4
  store i32 %30, i32* %1, align 4
  %31 = load i32* %1, align 4
  store i32 %31, i32* %retval.i6, align 4
  %retval1.i7 = load i32* %retval.i6
  %32 = load i32* @Down_Separation, align 4
  %33 = icmp sgt i32 %retval1.i7, %32
  br i1 %33, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  store i32 1, i32* %iftmp.15, align 4
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1, %bb
  store i32 0, i32* %iftmp.15, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %34 = load i32* %iftmp.15, align 4
  store i32 %34, i32* %result, align 4
  br label %bb12

bb6:                                              ; preds = %Inhibit_Biased_Climb.exit
  %35 = load i32* @Other_Tracked_Alt, align 4
  %36 = load i32* @Own_Tracked_Alt, align 4
  %37 = icmp slt i32 %35, %36
  %38 = zext i1 %37 to i32
  store i32 %38, i32* %2, align 4
  %39 = load i32* %2, align 4
  store i32 %39, i32* %retval.i4, align 4
  %retval1.i5 = load i32* %retval.i4
  %40 = icmp eq i32 %retval1.i5, 0
  br i1 %40, label %bb9, label %bb7

bb7:                                              ; preds = %bb6
  %41 = load i32* @Other_Tracked_Alt, align 4
  %42 = load i32* @Own_Tracked_Alt, align 4
  %43 = icmp slt i32 %41, %42
  %44 = zext i1 %43 to i32
  store i32 %44, i32* %3, align 4
  %45 = load i32* %3, align 4
  store i32 %45, i32* %retval.i2, align 4
  %retval1.i3 = load i32* %retval.i2
  %46 = icmp eq i32 %retval1.i3, 0
  br i1 %46, label %bb10, label %bb8

bb8:                                              ; preds = %bb7
  %47 = load i32* @Alt_Layer_Value, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %48
  %50 = load i32* %49, align 4
  store i32 %50, i32* %4, align 4
  %51 = load i32* %4, align 4
  store i32 %51, i32* %retval.i1, align 4
  %retval1.i = load i32* %retval.i1
  %52 = load i32* @Up_Separation, align 4
  %53 = icmp sle i32 %retval1.i, %52
  br i1 %53, label %bb9, label %bb10

bb9:                                              ; preds = %bb8, %bb6
  store i32 1, i32* %iftmp.18, align 4
  br label %bb11

bb10:                                             ; preds = %bb8, %bb7
  store i32 0, i32* %iftmp.18, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %54 = load i32* %iftmp.18, align 4
  store i32 %54, i32* %result, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5
  %55 = load i32* %result, align 4
  store i32 %55, i32* %6, align 4
  %56 = load i32* %6, align 4
  store i32 %56, i32* %retval, align 4
  br label %return

return:                                           ; preds = %bb12
  %retval13 = load i32* %retval
  ret i32 %retval13
}

define i32 @alt_sep_test() nounwind ssp {
entry:
  %retval.i35 = alloca i32
  %0 = alloca i32
  %retval.i8.i2 = alloca i32
  %1 = alloca i32
  %retval.i6.i3 = alloca i32
  %2 = alloca i32
  %retval.i4.i4 = alloca i32
  %3 = alloca i32
  %retval.i2.i5 = alloca i32
  %4 = alloca i32
  %retval.i1.i6 = alloca i32
  %5 = alloca i32
  %retval.i.i7 = alloca i32
  %iftmp.5.i.i8 = alloca i32
  %6 = alloca i32
  %retval.i9 = alloca i32
  %7 = alloca i32
  %iftmp.18.i = alloca i32
  %iftmp.15.i = alloca i32
  %upward_preferred.i10 = alloca i32
  %upward_crossing_situation.i11 = alloca i32
  %result.i12 = alloca i32
  %retval.i1 = alloca i32
  %8 = alloca i32
  %retval.i8.i = alloca i32
  %9 = alloca i32
  %retval.i6.i = alloca i32
  %10 = alloca i32
  %retval.i4.i = alloca i32
  %11 = alloca i32
  %retval.i2.i = alloca i32
  %12 = alloca i32
  %retval.i1.i = alloca i32
  %13 = alloca i32
  %retval.i.i = alloca i32
  %iftmp.5.i.i = alloca i32
  %14 = alloca i32
  %retval.i = alloca i32
  %15 = alloca i32
  %iftmp.11.i = alloca i32
  %iftmp.9.i = alloca i32
  %upward_preferred.i = alloca i32
  %upward_crossing_situation.i = alloca i32
  %result.i = alloca i32
  %retval = alloca i32
  %16 = alloca i32
  %iftmp.29 = alloca i32
  %iftmp.28 = alloca i32
  %iftmp.25 = alloca i32
  %iftmp.20 = alloca i32
  %enabled = alloca i32
  %tcas_equipped = alloca i32
  %intent_not_known = alloca i32
  %need_upward_RA = alloca i32
  %need_downward_RA = alloca i32
  %alt_sep = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %17 = load i32* @High_Confidence, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %bb3, label %bb

bb:                                               ; preds = %entry
  %19 = load i32* @Own_Tracked_Alt_Rate, align 4
  %20 = icmp sgt i32 %19, 600
  br i1 %20, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %21 = load i32* @Cur_Vertical_Sep, align 4
  %22 = icmp sle i32 %21, 600
  br i1 %22, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.20, align 4
  br label %bb4

bb3:                                              ; preds = %bb1, %bb, %entry
  store i32 0, i32* %iftmp.20, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %23 = load i32* %iftmp.20, align 4
  store i32 %23, i32* %enabled, align 4
  %24 = load i32* @Other_Capability, align 4
  %25 = icmp eq i32 %24, 1
  %26 = zext i1 %25 to i32
  store i32 %26, i32* %tcas_equipped, align 4
  %27 = load i32* @Two_of_Three_Reports_Valid, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %bb7, label %bb5

bb5:                                              ; preds = %bb4
  %29 = load i32* @Other_RAC, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  store i32 1, i32* %iftmp.25, align 4
  br label %bb8

bb7:                                              ; preds = %bb5, %bb4
  store i32 0, i32* %iftmp.25, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %31 = load i32* %iftmp.25, align 4
  store i32 %31, i32* %intent_not_known, align 4
  store i32 0, i32* %alt_sep, align 4
  %32 = load i32* %enabled, align 4
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %bb9, label %bb28

bb9:                                              ; preds = %bb8
  %34 = load i32* %tcas_equipped, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  %36 = load i32* %intent_not_known, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %bb12, label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %38 = load i32* %tcas_equipped, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %bb12, label %bb28

bb12:                                             ; preds = %bb11, %bb10
  %40 = load i32* @Climb_Inhibit, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %bb.i.i, label %bb1.i.i

bb.i.i:                                           ; preds = %bb12
  %42 = load i32* @Up_Separation, align 4
  %43 = add nsw i32 %42, 100
  store i32 %43, i32* %iftmp.5.i.i, align 4
  br label %Inhibit_Biased_Climb.exit.i

bb1.i.i:                                          ; preds = %bb12
  %44 = load i32* @Up_Separation, align 4
  store i32 %44, i32* %iftmp.5.i.i, align 4
  br label %Inhibit_Biased_Climb.exit.i

Inhibit_Biased_Climb.exit.i:                      ; preds = %bb1.i.i, %bb.i.i
  %45 = load i32* %iftmp.5.i.i, align 4
  store i32 %45, i32* %14, align 4
  %46 = load i32* %14, align 4
  store i32 %46, i32* %retval.i.i, align 4
  %retval3.i.i = load i32* %retval.i.i
  %47 = load i32* @Down_Separation, align 4
  %48 = icmp sgt i32 %retval3.i.i, %47
  %49 = zext i1 %48 to i32
  store i32 %49, i32* %upward_preferred.i, align 4
  %50 = load i32* %upward_preferred.i, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %bb.i, label %bb6.i

bb.i:                                             ; preds = %Inhibit_Biased_Climb.exit.i
  %52 = load i32* @Own_Tracked_Alt, align 4
  %53 = load i32* @Other_Tracked_Alt, align 4
  %54 = icmp slt i32 %52, %53
  %55 = zext i1 %54 to i32
  store i32 %55, i32* %9, align 4
  %56 = load i32* %9, align 4
  store i32 %56, i32* %retval.i8.i, align 4
  %retval1.i9.i = load i32* %retval.i8.i
  %57 = icmp eq i32 %retval1.i9.i, 0
  br i1 %57, label %bb3.i, label %bb1.i

bb1.i:                                            ; preds = %bb.i
  %58 = load i32* @Own_Tracked_Alt, align 4
  %59 = load i32* @Other_Tracked_Alt, align 4
  %60 = icmp slt i32 %58, %59
  %61 = zext i1 %60 to i32
  store i32 %61, i32* %10, align 4
  %62 = load i32* %10, align 4
  store i32 %62, i32* %retval.i6.i, align 4
  %retval1.i7.i = load i32* %retval.i6.i
  %63 = icmp eq i32 %retval1.i7.i, 0
  br i1 %63, label %bb4.i, label %bb2.i

bb2.i:                                            ; preds = %bb1.i
  %64 = load i32* @Alt_Layer_Value, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %65
  %67 = load i32* %66, align 4
  store i32 %67, i32* %11, align 4
  %68 = load i32* %11, align 4
  store i32 %68, i32* %retval.i4.i, align 4
  %retval1.i5.i = load i32* %retval.i4.i
  %69 = load i32* @Down_Separation, align 4
  %70 = icmp sgt i32 %retval1.i5.i, %69
  br i1 %70, label %bb3.i, label %bb4.i

bb3.i:                                            ; preds = %bb2.i, %bb.i
  store i32 1, i32* %iftmp.9.i, align 4
  br label %bb5.i

bb4.i:                                            ; preds = %bb2.i, %bb1.i
  store i32 0, i32* %iftmp.9.i, align 4
  br label %bb5.i

bb5.i:                                            ; preds = %bb4.i, %bb3.i
  %71 = load i32* %iftmp.9.i, align 4
  store i32 %71, i32* %result.i, align 4
  br label %Non_Crossing_Biased_Climb.exit

bb6.i:                                            ; preds = %Inhibit_Biased_Climb.exit.i
  %72 = load i32* @Other_Tracked_Alt, align 4
  %73 = load i32* @Own_Tracked_Alt, align 4
  %74 = icmp slt i32 %72, %73
  %75 = zext i1 %74 to i32
  store i32 %75, i32* %12, align 4
  %76 = load i32* %12, align 4
  store i32 %76, i32* %retval.i2.i, align 4
  %retval1.i3.i = load i32* %retval.i2.i
  %77 = icmp eq i32 %retval1.i3.i, 0
  br i1 %77, label %bb10.i, label %bb7.i

bb7.i:                                            ; preds = %bb6.i
  %78 = load i32* @Cur_Vertical_Sep, align 4
  %79 = icmp sle i32 %78, 299
  br i1 %79, label %bb10.i, label %bb8.i

bb8.i:                                            ; preds = %bb7.i
  %80 = load i32* @Alt_Layer_Value, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %81
  %83 = load i32* %82, align 4
  store i32 %83, i32* %13, align 4
  %84 = load i32* %13, align 4
  store i32 %84, i32* %retval.i1.i, align 4
  %retval1.i.i = load i32* %retval.i1.i
  %85 = load i32* @Up_Separation, align 4
  %86 = icmp sgt i32 %retval1.i.i, %85
  br i1 %86, label %bb10.i, label %bb9.i

bb9.i:                                            ; preds = %bb8.i
  store i32 1, i32* %iftmp.11.i, align 4
  br label %bb11.i

bb10.i:                                           ; preds = %bb8.i, %bb7.i, %bb6.i
  store i32 0, i32* %iftmp.11.i, align 4
  br label %bb11.i

bb11.i:                                           ; preds = %bb10.i, %bb9.i
  %87 = load i32* %iftmp.11.i, align 4
  store i32 %87, i32* %result.i, align 4
  br label %Non_Crossing_Biased_Climb.exit

Non_Crossing_Biased_Climb.exit:                   ; preds = %bb5.i, %bb11.i
  %88 = load i32* %result.i, align 4
  store i32 %88, i32* %15, align 4
  %89 = load i32* %15, align 4
  store i32 %89, i32* %retval.i, align 4
  %retval13.i = load i32* %retval.i
  %90 = icmp eq i32 %retval13.i, 0
  br i1 %90, label %bb15, label %bb13

bb13:                                             ; preds = %Non_Crossing_Biased_Climb.exit
  %91 = load i32* @Own_Tracked_Alt, align 4
  %92 = load i32* @Other_Tracked_Alt, align 4
  %93 = icmp slt i32 %91, %92
  %94 = zext i1 %93 to i32
  store i32 %94, i32* %0, align 4
  %95 = load i32* %0, align 4
  store i32 %95, i32* %retval.i35, align 4
  %retval1.i36 = load i32* %retval.i35
  %96 = icmp eq i32 %retval1.i36, 0
  br i1 %96, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  store i32 1, i32* %iftmp.28, align 4
  br label %bb16

bb15:                                             ; preds = %bb13, %Non_Crossing_Biased_Climb.exit
  store i32 0, i32* %iftmp.28, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %97 = load i32* %iftmp.28, align 4
  store i32 %97, i32* %need_upward_RA, align 4
  %98 = load i32* @Climb_Inhibit, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %bb.i.i13, label %bb1.i.i14

bb.i.i13:                                         ; preds = %bb16
  %100 = load i32* @Up_Separation, align 4
  %101 = add nsw i32 %100, 100
  store i32 %101, i32* %iftmp.5.i.i8, align 4
  br label %Inhibit_Biased_Climb.exit.i16

bb1.i.i14:                                        ; preds = %bb16
  %102 = load i32* @Up_Separation, align 4
  store i32 %102, i32* %iftmp.5.i.i8, align 4
  br label %Inhibit_Biased_Climb.exit.i16

Inhibit_Biased_Climb.exit.i16:                    ; preds = %bb1.i.i14, %bb.i.i13
  %103 = load i32* %iftmp.5.i.i8, align 4
  store i32 %103, i32* %6, align 4
  %104 = load i32* %6, align 4
  store i32 %104, i32* %retval.i.i7, align 4
  %retval3.i.i15 = load i32* %retval.i.i7
  %105 = load i32* @Down_Separation, align 4
  %106 = icmp sgt i32 %retval3.i.i15, %105
  %107 = zext i1 %106 to i32
  store i32 %107, i32* %upward_preferred.i10, align 4
  %108 = load i32* %upward_preferred.i10, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %bb.i18, label %bb6.i26

bb.i18:                                           ; preds = %Inhibit_Biased_Climb.exit.i16
  %110 = load i32* @Own_Tracked_Alt, align 4
  %111 = load i32* @Other_Tracked_Alt, align 4
  %112 = icmp slt i32 %110, %111
  %113 = zext i1 %112 to i32
  store i32 %113, i32* %1, align 4
  %114 = load i32* %1, align 4
  store i32 %114, i32* %retval.i8.i2, align 4
  %retval1.i9.i17 = load i32* %retval.i8.i2
  %115 = icmp eq i32 %retval1.i9.i17, 0
  br i1 %115, label %bb4.i23, label %bb1.i19

bb1.i19:                                          ; preds = %bb.i18
  %116 = load i32* @Cur_Vertical_Sep, align 4
  %117 = icmp sle i32 %116, 299
  br i1 %117, label %bb4.i23, label %bb2.i21

bb2.i21:                                          ; preds = %bb1.i19
  %118 = load i32* @Alt_Layer_Value, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %119
  %121 = load i32* %120, align 4
  store i32 %121, i32* %2, align 4
  %122 = load i32* %2, align 4
  store i32 %122, i32* %retval.i6.i3, align 4
  %retval1.i7.i20 = load i32* %retval.i6.i3
  %123 = load i32* @Down_Separation, align 4
  %124 = icmp sgt i32 %retval1.i7.i20, %123
  br i1 %124, label %bb4.i23, label %bb3.i22

bb3.i22:                                          ; preds = %bb2.i21
  store i32 1, i32* %iftmp.15.i, align 4
  br label %bb5.i24

bb4.i23:                                          ; preds = %bb2.i21, %bb1.i19, %bb.i18
  store i32 0, i32* %iftmp.15.i, align 4
  br label %bb5.i24

bb5.i24:                                          ; preds = %bb4.i23, %bb3.i22
  %125 = load i32* %iftmp.15.i, align 4
  store i32 %125, i32* %result.i12, align 4
  br label %Non_Crossing_Biased_Descend.exit

bb6.i26:                                          ; preds = %Inhibit_Biased_Climb.exit.i16
  %126 = load i32* @Other_Tracked_Alt, align 4
  %127 = load i32* @Own_Tracked_Alt, align 4
  %128 = icmp slt i32 %126, %127
  %129 = zext i1 %128 to i32
  store i32 %129, i32* %3, align 4
  %130 = load i32* %3, align 4
  store i32 %130, i32* %retval.i4.i4, align 4
  %retval1.i5.i25 = load i32* %retval.i4.i4
  %131 = icmp eq i32 %retval1.i5.i25, 0
  br i1 %131, label %bb9.i31, label %bb7.i28

bb7.i28:                                          ; preds = %bb6.i26
  %132 = load i32* @Other_Tracked_Alt, align 4
  %133 = load i32* @Own_Tracked_Alt, align 4
  %134 = icmp slt i32 %132, %133
  %135 = zext i1 %134 to i32
  store i32 %135, i32* %4, align 4
  %136 = load i32* %4, align 4
  store i32 %136, i32* %retval.i2.i5, align 4
  %retval1.i3.i27 = load i32* %retval.i2.i5
  %137 = icmp eq i32 %retval1.i3.i27, 0
  br i1 %137, label %bb10.i32, label %bb8.i30

bb8.i30:                                          ; preds = %bb7.i28
  %138 = load i32* @Alt_Layer_Value, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %139
  %141 = load i32* %140, align 4
  store i32 %141, i32* %5, align 4
  %142 = load i32* %5, align 4
  store i32 %142, i32* %retval.i1.i6, align 4
  %retval1.i.i29 = load i32* %retval.i1.i6
  %143 = load i32* @Up_Separation, align 4
  %144 = icmp sle i32 %retval1.i.i29, %143
  br i1 %144, label %bb9.i31, label %bb10.i32

bb9.i31:                                          ; preds = %bb8.i30, %bb6.i26
  store i32 1, i32* %iftmp.18.i, align 4
  br label %bb11.i33

bb10.i32:                                         ; preds = %bb8.i30, %bb7.i28
  store i32 0, i32* %iftmp.18.i, align 4
  br label %bb11.i33

bb11.i33:                                         ; preds = %bb10.i32, %bb9.i31
  %145 = load i32* %iftmp.18.i, align 4
  store i32 %145, i32* %result.i12, align 4
  br label %Non_Crossing_Biased_Descend.exit

Non_Crossing_Biased_Descend.exit:                 ; preds = %bb5.i24, %bb11.i33
  %146 = load i32* %result.i12, align 4
  store i32 %146, i32* %7, align 4
  %147 = load i32* %7, align 4
  store i32 %147, i32* %retval.i9, align 4
  %retval13.i34 = load i32* %retval.i9
  %148 = icmp eq i32 %retval13.i34, 0
  br i1 %148, label %bb19, label %bb17

bb17:                                             ; preds = %Non_Crossing_Biased_Descend.exit
  %149 = load i32* @Other_Tracked_Alt, align 4
  %150 = load i32* @Own_Tracked_Alt, align 4
  %151 = icmp slt i32 %149, %150
  %152 = zext i1 %151 to i32
  store i32 %152, i32* %8, align 4
  %153 = load i32* %8, align 4
  store i32 %153, i32* %retval.i1, align 4
  %retval1.i = load i32* %retval.i1
  %154 = icmp eq i32 %retval1.i, 0
  br i1 %154, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  store i32 1, i32* %iftmp.29, align 4
  br label %bb20

bb19:                                             ; preds = %bb17, %Non_Crossing_Biased_Descend.exit
  store i32 0, i32* %iftmp.29, align 4
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %155 = load i32* %iftmp.29, align 4
  store i32 %155, i32* %need_downward_RA, align 4
  %156 = load i32* %need_upward_RA, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %bb23, label %bb21

bb21:                                             ; preds = %bb20
  %158 = load i32* %need_downward_RA, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %bb23, label %bb22

bb22:                                             ; preds = %bb21
  store i32 0, i32* %alt_sep, align 4
  br label %bb28

bb23:                                             ; preds = %bb21, %bb20
  %160 = load i32* %need_upward_RA, align 4
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* %alt_sep, align 4
  br label %bb28

bb25:                                             ; preds = %bb23
  %162 = load i32* %need_downward_RA, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  store i32 2, i32* %alt_sep, align 4
  br label %bb28

bb27:                                             ; preds = %bb25
  store i32 0, i32* %alt_sep, align 4
  br label %bb28

bb28:                                             ; preds = %bb27, %bb26, %bb24, %bb22, %bb11, %bb8
  %164 = load i32* %alt_sep, align 4
  store i32 %164, i32* %16, align 4
  %165 = load i32* %16, align 4
  store i32 %165, i32* %retval, align 4
  br label %return

return:                                           ; preds = %bb28
  %retval29 = load i32* %retval
  ret i32 %retval29
}

define i32 @main(i32 %Cur_Vertical_Sep, i32 %High_Confidence, i32 %Two_of_Three_Reports_Valid, i32 %Own_Tracked_Alt, i32 %Own_Tracked_Alt_Rate, i32 %Other_Tracked_Alt, i32 %Alt_Layer_Value, i32 %Up_Separation, i32 %Down_Separation, i32 %Other_RAC, i32 %Other_Capability, i32 %Climb_Inhibit) nounwind ssp {
entry:
  %retval.i35.i = alloca i32
  %0 = alloca i32
  %retval.i8.i2.i = alloca i32
  %1 = alloca i32
  %retval.i6.i3.i = alloca i32
  %2 = alloca i32
  %retval.i4.i4.i = alloca i32
  %3 = alloca i32
  %retval.i2.i5.i = alloca i32
  %4 = alloca i32
  %retval.i1.i6.i = alloca i32
  %5 = alloca i32
  %retval.i.i7.i = alloca i32
  %iftmp.5.i.i8.i = alloca i32
  %6 = alloca i32
  %retval.i9.i = alloca i32
  %7 = alloca i32
  %iftmp.18.i.i = alloca i32
  %iftmp.15.i.i = alloca i32
  %upward_preferred.i10.i = alloca i32
  %upward_crossing_situation.i11.i = alloca i32
  %result.i12.i = alloca i32
  %retval.i1.i = alloca i32
  %8 = alloca i32
  %retval.i8.i.i = alloca i32
  %9 = alloca i32
  %retval.i6.i.i = alloca i32
  %10 = alloca i32
  %retval.i4.i.i = alloca i32
  %11 = alloca i32
  %retval.i2.i.i = alloca i32
  %12 = alloca i32
  %retval.i1.i.i = alloca i32
  %13 = alloca i32
  %retval.i.i.i = alloca i32
  %iftmp.5.i.i.i = alloca i32
  %14 = alloca i32
  %retval.i.i = alloca i32
  %15 = alloca i32
  %iftmp.11.i.i = alloca i32
  %iftmp.9.i.i = alloca i32
  %upward_preferred.i.i = alloca i32
  %upward_crossing_situation.i.i = alloca i32
  %result.i.i = alloca i32
  %retval.i = alloca i32
  %16 = alloca i32
  %iftmp.29.i = alloca i32
  %iftmp.28.i = alloca i32
  %iftmp.25.i = alloca i32
  %iftmp.20.i = alloca i32
  %enabled.i = alloca i32
  %tcas_equipped.i = alloca i32
  %intent_not_known.i = alloca i32
  %need_upward_RA.i = alloca i32
  %need_downward_RA.i = alloca i32
  %alt_sep.i = alloca i32
  %Cur_Vertical_Sep_addr = alloca i32, align 4
  %High_Confidence_addr = alloca i32, align 4
  %Two_of_Three_Reports_Valid_addr = alloca i32, align 4
  %Own_Tracked_Alt_addr = alloca i32, align 4
  %Own_Tracked_Alt_Rate_addr = alloca i32, align 4
  %Other_Tracked_Alt_addr = alloca i32, align 4
  %Alt_Layer_Value_addr = alloca i32, align 4
  %Up_Separation_addr = alloca i32, align 4
  %Down_Separation_addr = alloca i32, align 4
  %Other_RAC_addr = alloca i32, align 4
  %Other_Capability_addr = alloca i32, align 4
  %Climb_Inhibit_addr = alloca i32, align 4
  %retval = alloca i32
  %17 = alloca i32
  %iftmp.30 = alloca i32
  %x = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %Cur_Vertical_Sep, i32* %Cur_Vertical_Sep_addr
  store i32 %High_Confidence, i32* %High_Confidence_addr
  store i32 %Two_of_Three_Reports_Valid, i32* %Two_of_Three_Reports_Valid_addr
  store i32 %Own_Tracked_Alt, i32* %Own_Tracked_Alt_addr
  store i32 %Own_Tracked_Alt_Rate, i32* %Own_Tracked_Alt_Rate_addr
  store i32 %Other_Tracked_Alt, i32* %Other_Tracked_Alt_addr
  store i32 %Alt_Layer_Value, i32* %Alt_Layer_Value_addr
  store i32 %Up_Separation, i32* %Up_Separation_addr
  store i32 %Down_Separation, i32* %Down_Separation_addr
  store i32 %Other_RAC, i32* %Other_RAC_addr
  store i32 %Other_Capability, i32* %Other_Capability_addr
  store i32 %Climb_Inhibit, i32* %Climb_Inhibit_addr
  store i32 400, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 0), align 4
  store i32 500, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 1), align 4
  store i32 640, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 2), align 4
  store i32 740, i32* getelementptr inbounds ([4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 3), align 4
  %18 = load i32* %Cur_Vertical_Sep_addr, align 4
  %19 = icmp ne i32 %18, 1258
  br i1 %19, label %bb12, label %bb

bb:                                               ; preds = %entry
  %20 = load i32* %High_Confidence_addr, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %bb12, label %bb1

bb1:                                              ; preds = %bb
  %22 = load i32* %Two_of_Three_Reports_Valid_addr, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %bb12, label %bb2

bb2:                                              ; preds = %bb1
  %24 = load i32* %Own_Tracked_Alt_addr, align 4
  %25 = icmp ne i32 %24, 897
  br i1 %25, label %bb12, label %bb3

bb3:                                              ; preds = %bb2
  %26 = load i32* %Own_Tracked_Alt_Rate_addr, align 4
  %27 = icmp ne i32 %26, 174
  br i1 %27, label %bb12, label %bb4

bb4:                                              ; preds = %bb3
  %28 = load i32* %Other_Tracked_Alt_addr, align 4
  %29 = icmp ne i32 %28, 7253
  br i1 %29, label %bb12, label %bb5

bb5:                                              ; preds = %bb4
  %30 = load i32* %Alt_Layer_Value_addr, align 4
  %31 = icmp ne i32 %30, 1
  br i1 %31, label %bb12, label %bb6

bb6:                                              ; preds = %bb5
  %32 = load i32* %Up_Separation_addr, align 4
  %33 = icmp ne i32 %32, 629
  br i1 %33, label %bb12, label %bb7

bb7:                                              ; preds = %bb6
  %34 = load i32* %Down_Separation_addr, align 4
  %35 = icmp ne i32 %34, 500
  br i1 %35, label %bb12, label %bb8

bb8:                                              ; preds = %bb7
  %36 = load i32* %Other_RAC_addr, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %bb12, label %bb9

bb9:                                              ; preds = %bb8
  %38 = load i32* %Other_Capability_addr, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %bb12, label %bb10

bb10:                                             ; preds = %bb9
  %40 = load i32* %Climb_Inhibit_addr, align 4
  %41 = icmp ne i32 %40, 1
  br i1 %41, label %bb12, label %bb11

bb11:                                             ; preds = %bb10
  store i32 1, i32* %iftmp.30, align 4
  br label %bb13

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1, %bb, %entry
  store i32 0, i32* %iftmp.30, align 4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %42 = load i32* %iftmp.30, align 4
  %43 = call i32 (...)* @assert(i32 %42) nounwind
  %44 = load i32* @High_Confidence, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %bb3.i, label %bb.i

bb.i:                                             ; preds = %bb13
  %46 = load i32* @Own_Tracked_Alt_Rate, align 4
  %47 = icmp sgt i32 %46, 600
  br i1 %47, label %bb3.i, label %bb1.i

bb1.i:                                            ; preds = %bb.i
  %48 = load i32* @Cur_Vertical_Sep, align 4
  %49 = icmp sle i32 %48, 600
  br i1 %49, label %bb3.i, label %bb2.i

bb2.i:                                            ; preds = %bb1.i
  store i32 1, i32* %iftmp.20.i, align 4
  br label %bb4.i

bb3.i:                                            ; preds = %bb1.i, %bb.i, %bb13
  store i32 0, i32* %iftmp.20.i, align 4
  br label %bb4.i

bb4.i:                                            ; preds = %bb3.i, %bb2.i
  %50 = load i32* %iftmp.20.i, align 4
  store i32 %50, i32* %enabled.i, align 4
  %51 = load i32* @Other_Capability, align 4
  %52 = icmp eq i32 %51, 1
  %53 = zext i1 %52 to i32
  store i32 %53, i32* %tcas_equipped.i, align 4
  %54 = load i32* @Two_of_Three_Reports_Valid, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %bb7.i, label %bb5.i

bb5.i:                                            ; preds = %bb4.i
  %56 = load i32* @Other_RAC, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %bb7.i, label %bb6.i

bb6.i:                                            ; preds = %bb5.i
  store i32 1, i32* %iftmp.25.i, align 4
  br label %bb8.i

bb7.i:                                            ; preds = %bb5.i, %bb4.i
  store i32 0, i32* %iftmp.25.i, align 4
  br label %bb8.i

bb8.i:                                            ; preds = %bb7.i, %bb6.i
  %58 = load i32* %iftmp.25.i, align 4
  store i32 %58, i32* %intent_not_known.i, align 4
  store i32 0, i32* %alt_sep.i, align 4
  %59 = load i32* %enabled.i, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %bb9.i, label %alt_sep_test.exit

bb9.i:                                            ; preds = %bb8.i
  %61 = load i32* %tcas_equipped.i, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %bb11.i, label %bb10.i

bb10.i:                                           ; preds = %bb9.i
  %63 = load i32* %intent_not_known.i, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %bb12.i, label %bb11.i

bb11.i:                                           ; preds = %bb10.i, %bb9.i
  %65 = load i32* %tcas_equipped.i, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %bb12.i, label %alt_sep_test.exit

bb12.i:                                           ; preds = %bb11.i, %bb10.i
  %67 = load i32* @Climb_Inhibit, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %bb.i.i.i, label %bb1.i.i.i

bb.i.i.i:                                         ; preds = %bb12.i
  %69 = load i32* @Up_Separation, align 4
  %70 = add nsw i32 %69, 100
  store i32 %70, i32* %iftmp.5.i.i.i, align 4
  br label %Inhibit_Biased_Climb.exit.i.i

bb1.i.i.i:                                        ; preds = %bb12.i
  %71 = load i32* @Up_Separation, align 4
  store i32 %71, i32* %iftmp.5.i.i.i, align 4
  br label %Inhibit_Biased_Climb.exit.i.i

Inhibit_Biased_Climb.exit.i.i:                    ; preds = %bb1.i.i.i, %bb.i.i.i
  %72 = load i32* %iftmp.5.i.i.i, align 4
  store i32 %72, i32* %14, align 4
  %73 = load i32* %14, align 4
  store i32 %73, i32* %retval.i.i.i, align 4
  %retval3.i.i.i = load i32* %retval.i.i.i
  %74 = load i32* @Down_Separation, align 4
  %75 = icmp sgt i32 %retval3.i.i.i, %74
  %76 = zext i1 %75 to i32
  store i32 %76, i32* %upward_preferred.i.i, align 4
  %77 = load i32* %upward_preferred.i.i, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %bb.i.i, label %bb6.i.i

bb.i.i:                                           ; preds = %Inhibit_Biased_Climb.exit.i.i
  %79 = load i32* @Own_Tracked_Alt, align 4
  %80 = load i32* @Other_Tracked_Alt, align 4
  %81 = icmp slt i32 %79, %80
  %82 = zext i1 %81 to i32
  store i32 %82, i32* %9, align 4
  %83 = load i32* %9, align 4
  store i32 %83, i32* %retval.i8.i.i, align 4
  %retval1.i9.i.i = load i32* %retval.i8.i.i
  %84 = icmp eq i32 %retval1.i9.i.i, 0
  br i1 %84, label %bb3.i.i, label %bb1.i.i

bb1.i.i:                                          ; preds = %bb.i.i
  %85 = load i32* @Own_Tracked_Alt, align 4
  %86 = load i32* @Other_Tracked_Alt, align 4
  %87 = icmp slt i32 %85, %86
  %88 = zext i1 %87 to i32
  store i32 %88, i32* %10, align 4
  %89 = load i32* %10, align 4
  store i32 %89, i32* %retval.i6.i.i, align 4
  %retval1.i7.i.i = load i32* %retval.i6.i.i
  %90 = icmp eq i32 %retval1.i7.i.i, 0
  br i1 %90, label %bb4.i.i, label %bb2.i.i

bb2.i.i:                                          ; preds = %bb1.i.i
  %91 = load i32* @Alt_Layer_Value, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %92
  %94 = load i32* %93, align 4
  store i32 %94, i32* %11, align 4
  %95 = load i32* %11, align 4
  store i32 %95, i32* %retval.i4.i.i, align 4
  %retval1.i5.i.i = load i32* %retval.i4.i.i
  %96 = load i32* @Down_Separation, align 4
  %97 = icmp sgt i32 %retval1.i5.i.i, %96
  br i1 %97, label %bb3.i.i, label %bb4.i.i

bb3.i.i:                                          ; preds = %bb2.i.i, %bb.i.i
  store i32 1, i32* %iftmp.9.i.i, align 4
  br label %bb5.i.i

bb4.i.i:                                          ; preds = %bb2.i.i, %bb1.i.i
  store i32 0, i32* %iftmp.9.i.i, align 4
  br label %bb5.i.i

bb5.i.i:                                          ; preds = %bb4.i.i, %bb3.i.i
  %98 = load i32* %iftmp.9.i.i, align 4
  store i32 %98, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

bb6.i.i:                                          ; preds = %Inhibit_Biased_Climb.exit.i.i
  %99 = load i32* @Other_Tracked_Alt, align 4
  %100 = load i32* @Own_Tracked_Alt, align 4
  %101 = icmp slt i32 %99, %100
  %102 = zext i1 %101 to i32
  store i32 %102, i32* %12, align 4
  %103 = load i32* %12, align 4
  store i32 %103, i32* %retval.i2.i.i, align 4
  %retval1.i3.i.i = load i32* %retval.i2.i.i
  %104 = icmp eq i32 %retval1.i3.i.i, 0
  br i1 %104, label %bb10.i.i, label %bb7.i.i

bb7.i.i:                                          ; preds = %bb6.i.i
  %105 = load i32* @Cur_Vertical_Sep, align 4
  %106 = icmp sle i32 %105, 299
  br i1 %106, label %bb10.i.i, label %bb8.i.i

bb8.i.i:                                          ; preds = %bb7.i.i
  %107 = load i32* @Alt_Layer_Value, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %108
  %110 = load i32* %109, align 4
  store i32 %110, i32* %13, align 4
  %111 = load i32* %13, align 4
  store i32 %111, i32* %retval.i1.i.i, align 4
  %retval1.i.i.i = load i32* %retval.i1.i.i
  %112 = load i32* @Up_Separation, align 4
  %113 = icmp sgt i32 %retval1.i.i.i, %112
  br i1 %113, label %bb10.i.i, label %bb9.i.i

bb9.i.i:                                          ; preds = %bb8.i.i
  store i32 1, i32* %iftmp.11.i.i, align 4
  br label %bb11.i.i

bb10.i.i:                                         ; preds = %bb8.i.i, %bb7.i.i, %bb6.i.i
  store i32 0, i32* %iftmp.11.i.i, align 4
  br label %bb11.i.i

bb11.i.i:                                         ; preds = %bb10.i.i, %bb9.i.i
  %114 = load i32* %iftmp.11.i.i, align 4
  store i32 %114, i32* %result.i.i, align 4
  br label %Non_Crossing_Biased_Climb.exit.i

Non_Crossing_Biased_Climb.exit.i:                 ; preds = %bb11.i.i, %bb5.i.i
  %115 = load i32* %result.i.i, align 4
  store i32 %115, i32* %15, align 4
  %116 = load i32* %15, align 4
  store i32 %116, i32* %retval.i.i, align 4
  %retval13.i.i = load i32* %retval.i.i
  %117 = icmp eq i32 %retval13.i.i, 0
  br i1 %117, label %bb15.i, label %bb13.i

bb13.i:                                           ; preds = %Non_Crossing_Biased_Climb.exit.i
  %118 = load i32* @Own_Tracked_Alt, align 4
  %119 = load i32* @Other_Tracked_Alt, align 4
  %120 = icmp slt i32 %118, %119
  %121 = zext i1 %120 to i32
  store i32 %121, i32* %0, align 4
  %122 = load i32* %0, align 4
  store i32 %122, i32* %retval.i35.i, align 4
  %retval1.i36.i = load i32* %retval.i35.i
  %123 = icmp eq i32 %retval1.i36.i, 0
  br i1 %123, label %bb15.i, label %bb14.i

bb14.i:                                           ; preds = %bb13.i
  store i32 1, i32* %iftmp.28.i, align 4
  br label %bb16.i

bb15.i:                                           ; preds = %bb13.i, %Non_Crossing_Biased_Climb.exit.i
  store i32 0, i32* %iftmp.28.i, align 4
  br label %bb16.i

bb16.i:                                           ; preds = %bb15.i, %bb14.i
  %124 = load i32* %iftmp.28.i, align 4
  store i32 %124, i32* %need_upward_RA.i, align 4
  %125 = load i32* @Climb_Inhibit, align 4
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %bb.i.i13.i, label %bb1.i.i14.i

bb.i.i13.i:                                       ; preds = %bb16.i
  %127 = load i32* @Up_Separation, align 4
  %128 = add nsw i32 %127, 100
  store i32 %128, i32* %iftmp.5.i.i8.i, align 4
  br label %Inhibit_Biased_Climb.exit.i16.i

bb1.i.i14.i:                                      ; preds = %bb16.i
  %129 = load i32* @Up_Separation, align 4
  store i32 %129, i32* %iftmp.5.i.i8.i, align 4
  br label %Inhibit_Biased_Climb.exit.i16.i

Inhibit_Biased_Climb.exit.i16.i:                  ; preds = %bb1.i.i14.i, %bb.i.i13.i
  %130 = load i32* %iftmp.5.i.i8.i, align 4
  store i32 %130, i32* %6, align 4
  %131 = load i32* %6, align 4
  store i32 %131, i32* %retval.i.i7.i, align 4
  %retval3.i.i15.i = load i32* %retval.i.i7.i
  %132 = load i32* @Down_Separation, align 4
  %133 = icmp sgt i32 %retval3.i.i15.i, %132
  %134 = zext i1 %133 to i32
  store i32 %134, i32* %upward_preferred.i10.i, align 4
  %135 = load i32* %upward_preferred.i10.i, align 4
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %bb.i18.i, label %bb6.i26.i

bb.i18.i:                                         ; preds = %Inhibit_Biased_Climb.exit.i16.i
  %137 = load i32* @Own_Tracked_Alt, align 4
  %138 = load i32* @Other_Tracked_Alt, align 4
  %139 = icmp slt i32 %137, %138
  %140 = zext i1 %139 to i32
  store i32 %140, i32* %1, align 4
  %141 = load i32* %1, align 4
  store i32 %141, i32* %retval.i8.i2.i, align 4
  %retval1.i9.i17.i = load i32* %retval.i8.i2.i
  %142 = icmp eq i32 %retval1.i9.i17.i, 0
  br i1 %142, label %bb4.i23.i, label %bb1.i19.i

bb1.i19.i:                                        ; preds = %bb.i18.i
  %143 = load i32* @Cur_Vertical_Sep, align 4
  %144 = icmp sle i32 %143, 299
  br i1 %144, label %bb4.i23.i, label %bb2.i21.i

bb2.i21.i:                                        ; preds = %bb1.i19.i
  %145 = load i32* @Alt_Layer_Value, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %146
  %148 = load i32* %147, align 4
  store i32 %148, i32* %2, align 4
  %149 = load i32* %2, align 4
  store i32 %149, i32* %retval.i6.i3.i, align 4
  %retval1.i7.i20.i = load i32* %retval.i6.i3.i
  %150 = load i32* @Down_Separation, align 4
  %151 = icmp sgt i32 %retval1.i7.i20.i, %150
  br i1 %151, label %bb4.i23.i, label %bb3.i22.i

bb3.i22.i:                                        ; preds = %bb2.i21.i
  store i32 1, i32* %iftmp.15.i.i, align 4
  br label %bb5.i24.i

bb4.i23.i:                                        ; preds = %bb2.i21.i, %bb1.i19.i, %bb.i18.i
  store i32 0, i32* %iftmp.15.i.i, align 4
  br label %bb5.i24.i

bb5.i24.i:                                        ; preds = %bb4.i23.i, %bb3.i22.i
  %152 = load i32* %iftmp.15.i.i, align 4
  store i32 %152, i32* %result.i12.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

bb6.i26.i:                                        ; preds = %Inhibit_Biased_Climb.exit.i16.i
  %153 = load i32* @Other_Tracked_Alt, align 4
  %154 = load i32* @Own_Tracked_Alt, align 4
  %155 = icmp slt i32 %153, %154
  %156 = zext i1 %155 to i32
  store i32 %156, i32* %3, align 4
  %157 = load i32* %3, align 4
  store i32 %157, i32* %retval.i4.i4.i, align 4
  %retval1.i5.i25.i = load i32* %retval.i4.i4.i
  %158 = icmp eq i32 %retval1.i5.i25.i, 0
  br i1 %158, label %bb9.i31.i, label %bb7.i28.i

bb7.i28.i:                                        ; preds = %bb6.i26.i
  %159 = load i32* @Other_Tracked_Alt, align 4
  %160 = load i32* @Own_Tracked_Alt, align 4
  %161 = icmp slt i32 %159, %160
  %162 = zext i1 %161 to i32
  store i32 %162, i32* %4, align 4
  %163 = load i32* %4, align 4
  store i32 %163, i32* %retval.i2.i5.i, align 4
  %retval1.i3.i27.i = load i32* %retval.i2.i5.i
  %164 = icmp eq i32 %retval1.i3.i27.i, 0
  br i1 %164, label %bb10.i32.i, label %bb8.i30.i

bb8.i30.i:                                        ; preds = %bb7.i28.i
  %165 = load i32* @Alt_Layer_Value, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [4 x i32]* @Positive_RA_Alt_Thresh, i64 0, i64 %166
  %168 = load i32* %167, align 4
  store i32 %168, i32* %5, align 4
  %169 = load i32* %5, align 4
  store i32 %169, i32* %retval.i1.i6.i, align 4
  %retval1.i.i29.i = load i32* %retval.i1.i6.i
  %170 = load i32* @Up_Separation, align 4
  %171 = icmp sle i32 %retval1.i.i29.i, %170
  br i1 %171, label %bb9.i31.i, label %bb10.i32.i

bb9.i31.i:                                        ; preds = %bb8.i30.i, %bb6.i26.i
  store i32 1, i32* %iftmp.18.i.i, align 4
  br label %bb11.i33.i

bb10.i32.i:                                       ; preds = %bb8.i30.i, %bb7.i28.i
  store i32 0, i32* %iftmp.18.i.i, align 4
  br label %bb11.i33.i

bb11.i33.i:                                       ; preds = %bb10.i32.i, %bb9.i31.i
  %172 = load i32* %iftmp.18.i.i, align 4
  store i32 %172, i32* %result.i12.i, align 4
  br label %Non_Crossing_Biased_Descend.exit.i

Non_Crossing_Biased_Descend.exit.i:               ; preds = %bb11.i33.i, %bb5.i24.i
  %173 = load i32* %result.i12.i, align 4
  store i32 %173, i32* %7, align 4
  %174 = load i32* %7, align 4
  store i32 %174, i32* %retval.i9.i, align 4
  %retval13.i34.i = load i32* %retval.i9.i
  %175 = icmp eq i32 %retval13.i34.i, 0
  br i1 %175, label %bb19.i, label %bb17.i

bb17.i:                                           ; preds = %Non_Crossing_Biased_Descend.exit.i
  %176 = load i32* @Other_Tracked_Alt, align 4
  %177 = load i32* @Own_Tracked_Alt, align 4
  %178 = icmp slt i32 %176, %177
  %179 = zext i1 %178 to i32
  store i32 %179, i32* %8, align 4
  %180 = load i32* %8, align 4
  store i32 %180, i32* %retval.i1.i, align 4
  %retval1.i.i = load i32* %retval.i1.i
  %181 = icmp eq i32 %retval1.i.i, 0
  br i1 %181, label %bb19.i, label %bb18.i

bb18.i:                                           ; preds = %bb17.i
  store i32 1, i32* %iftmp.29.i, align 4
  br label %bb20.i

bb19.i:                                           ; preds = %bb17.i, %Non_Crossing_Biased_Descend.exit.i
  store i32 0, i32* %iftmp.29.i, align 4
  br label %bb20.i

bb20.i:                                           ; preds = %bb19.i, %bb18.i
  %182 = load i32* %iftmp.29.i, align 4
  store i32 %182, i32* %need_downward_RA.i, align 4
  %183 = load i32* %need_upward_RA.i, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %bb23.i, label %bb21.i

bb21.i:                                           ; preds = %bb20.i
  %185 = load i32* %need_downward_RA.i, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %bb23.i, label %bb22.i

bb22.i:                                           ; preds = %bb21.i
  store i32 0, i32* %alt_sep.i, align 4
  br label %alt_sep_test.exit

bb23.i:                                           ; preds = %bb21.i, %bb20.i
  %187 = load i32* %need_upward_RA.i, align 4
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %bb24.i, label %bb25.i

bb24.i:                                           ; preds = %bb23.i
  store i32 1, i32* %alt_sep.i, align 4
  br label %alt_sep_test.exit

bb25.i:                                           ; preds = %bb23.i
  %189 = load i32* %need_downward_RA.i, align 4
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %bb26.i, label %bb27.i

bb26.i:                                           ; preds = %bb25.i
  store i32 2, i32* %alt_sep.i, align 4
  br label %alt_sep_test.exit

bb27.i:                                           ; preds = %bb25.i
  store i32 0, i32* %alt_sep.i, align 4
  br label %alt_sep_test.exit

alt_sep_test.exit:                                ; preds = %bb8.i, %bb11.i, %bb22.i, %bb24.i, %bb26.i, %bb27.i
  %191 = load i32* %alt_sep.i, align 4
  store i32 %191, i32* %16, align 4
  %192 = load i32* %16, align 4
  store i32 %192, i32* %retval.i, align 4
  %retval29.i = load i32* %retval.i
  store i32 %retval29.i, i32* %x, align 4
  %193 = load i32* %x, align 4
  %194 = icmp eq i32 %193, 0
  %195 = zext i1 %194 to i32
  %196 = call i32 (...)* @assert(i32 %195) nounwind
  %197 = load i32* %x, align 4
  store i32 %197, i32* %17, align 4
  %198 = load i32* %17, align 4
  store i32 %198, i32* %retval, align 4
  br label %return

return:                                           ; preds = %alt_sep_test.exit
  %retval14 = load i32* %retval
  ret i32 %retval14
}

declare i32 @assert(...)

--------------------------------------------
Formula dump
 nb hard expressions: 106
 nb soft expressions: 56
 total weight       : 560
(and (= tmp (+ 0 0)) (< 0 4)) [h]
(and (= _ 400) (= MEM1 (update MEM0 (tmp) _))) [s]
(and (= tmp11 (+ 0 1)) (< 1 4)) [h]
(and (= _2 500) (= MEM2 (update MEM1 (tmp11) _2))) [s]
(and (= tmp12 (+ 0 2)) (< 2 4)) [h]
(and (= _3 640) (= MEM3 (update MEM2 (tmp12) _3))) [s]
(and (= tmp13 (+ 0 3)) (< 3 4)) [h]
(and (= _4 740) (= MEM4 (update MEM3 (tmp13) _4))) [s]
(= _Cur_Vertical_Sep arg1) [s]
(= _High_Confidence arg2) [s]
(= _Two_of_Three_Reports_Valid arg3) [s]
(= _Own_Tracked_Alt arg4) [s]
(= _Own_Tracked_Alt_Rate arg5) [s]
(= _Other_Tracked_Alt arg6) [s]
(= _Alt_Layer_Value arg7) [s]
(= _Up_Separation arg8) [s]
(= _Down_Separation arg9) [s]
(= _Other_RAC arg10) [s]
(= _Other_Capability arg11) [s]
(= _Climb_Inhibit arg12) [s]
(and (= bb_bb15 tmp14) (= bb_bb19 (not tmp14))) [h]
(and (= bb15_bb17 (and tmp16 bb_bb15)) (= bb15_bb19 (and (not tmp16) bb_bb15))) [h]
(= bb17_bb19 bb15_bb17) [h]
(= tmp20 (ite bb15_bb19 false (ite bb_bb19 false (ite bb17_bb19 tmp18 tmp20)))) [h]
(= tmp21 (ite tmp20 1 0)) [h]
(= _enabled.i tmp21) [h]
(and (= tmp14 (!= _High_Confidence 0)) (= tmp16 (<= _Own_Tracked_Alt_Rate 600)) (= tmp18 (> _Cur_Vertical_Sep 600))) [s]
(= tmp23 (ite tmp22 1 0)) [h]
(and (= tmp22 (= _Other_Capability 1)) (= _tcas_equipped.i tmp23)) [s]
(and (= bb19_bb25 (and tmp24 (or bb17_bb19 bb15_bb19 bb_bb19))) (= bb19_bb27 (and (not tmp24) (or bb17_bb19 bb15_bb19 bb_bb19)))) [h]
(= bb25_bb27 bb19_bb25) [h]
(= tmp28 (ite bb19_bb27 false (ite bb25_bb27 tmp26 tmp28))) [h]
(= tmp29 (ite tmp28 1 0)) [h]
(= _intent_not_known.i tmp29) [h]
(and (= tmp24 (!= _Two_of_Three_Reports_Valid 0)) (= tmp26 (= _Other_RAC 0))) [s]
(= _alt_sep.i 0) [s]
(and (= bb27_bb31 (and tmp30 (or bb25_bb27 bb19_bb27))) (= bb27_alt_sep_test.exit (and (not tmp30) (or bb25_bb27 bb19_bb27)))) [h]
(and (= bb31_bb33 (and tmp32 bb27_bb31)) (= bb31_bb35 (and (not tmp32) bb27_bb31))) [h]
(and (= bb33_bb37 (and tmp34 bb31_bb33)) (= bb33_bb35 (and (not tmp34) bb31_bb33))) [h]
(and (= bb35_alt_sep_test.exit (and tmp36 (or bb33_bb35 bb31_bb35))) (= bb35_bb37 (and (not tmp36) (or bb33_bb35 bb31_bb35)))) [h]
(and (= tmp30 (!= _enabled.i 0)) (= tmp32 (!= _tcas_equipped.i 0)) (= tmp34 (!= _intent_not_known.i 0)) (= tmp36 (!= _tcas_equipped.i 0))) [s]
(and (= bb37_bb39 (and tmp38 (or bb35_bb37 bb33_bb37))) (= bb37_bb41 (and (not tmp38) (or bb35_bb37 bb33_bb37)))) [h]
(= bb41_Inhibit_Biased_Climb.exit.i.i bb37_bb41) [h]
(= bb39_Inhibit_Biased_Climb.exit.i.i bb37_bb39) [h]
(= tmp42 (ite bb39_Inhibit_Biased_Climb.exit.i.i tmp40 (ite bb41_Inhibit_Biased_Climb.exit.i.i _Up_Separation tmp42))) [h]
(and (= tmp38 (!= _Climb_Inhibit 0)) (= tmp40 (+ _Up_Separation 100))) [s]
(= tmp44 (ite tmp43 1 0)) [h]
(and (= tmp43 (> tmp42 _Down_Separation)) (= _upward_preferred.i.i tmp44)) [s]
(and (= Inhibit_Biased_Climb.exit.i.i_bb46 (and tmp45 (or bb41_Inhibit_Biased_Climb.exit.i.i bb39_Inhibit_Biased_Climb.exit.i.i))) (= Inhibit_Biased_Climb.exit.i.i_bb62 (and (not tmp45) (or bb41_Inhibit_Biased_Climb.exit.i.i bb39_Inhibit_Biased_Climb.exit.i.i)))) [h]
(= tmp45 (!= _upward_preferred.i.i 0)) [s]
(= tmp64 (ite tmp63 1 0)) [h]
(and (= bb62_bb65 (and tmp63 Inhibit_Biased_Climb.exit.i.i_bb62)) (= bb62_bb71 (and (not tmp63) Inhibit_Biased_Climb.exit.i.i_bb62))) [h]
(= tmp63 (< _Other_Tracked_Alt _Own_Tracked_Alt)) [s]
(and (= bb65_bb67 (and tmp66 bb62_bb65)) (= bb65_bb71 (and (not tmp66) bb62_bb65))) [h]
(and (= tmp68 (+ 0 0)) (ite bb65_bb67 (< 0 4) true)) [h]
(= tmp66 (>= _Cur_Vertical_Sep 300)) [s]
(and (= tmp69 (MEM4 tmp68)) (= _ret.i.i.i tmp69)) [s]
(= bb67_bb71 bb65_bb67) [h]
(= tmp72 (ite bb65_bb71 false (ite bb62_bb71 false (ite bb67_bb71 tmp70 tmp72)))) [h]
(= tmp73 (ite tmp72 1 0)) [h]
(= _result.i.i5 tmp73) [h]
(= bb71_Non_Crossing_Biased_Climb.exit.i (or bb67_bb71 bb65_bb71 bb62_bb71)) [h]
(= tmp70 (>= _Up_Separation _ret.i.i.i)) [s]
(= tmp48 (ite tmp47 1 0)) [h]
(and (= bb46_bb49 (and tmp47 Inhibit_Biased_Climb.exit.i.i_bb46)) (= bb46_bb59 (and (not tmp47) Inhibit_Biased_Climb.exit.i.i_bb46))) [h]
(= tmp51 (ite tmp50 1 0)) [h]
(and (= bb49_bb52 (and tmp50 bb46_bb49)) (= bb49_bb57 (and (not tmp50) bb46_bb49))) [h]
(and (= tmp53 (+ 0 0)) (ite bb49_bb52 (< 0 4) true)) [h]
(and (= tmp47 (< _Own_Tracked_Alt _Other_Tracked_Alt)) (= tmp50 (< _Own_Tracked_Alt _Other_Tracked_Alt))) [s]
(and (= tmp54 (MEM4 tmp53)) (= _ret.i1.i.i tmp54)) [s]
(= bb52_bb57 bb49_bb52) [h]
(= tmp58 (ite bb49_bb57 false (ite bb52_bb57 tmp56 tmp58))) [h]
(= bb57_bb59 (or bb52_bb57 bb49_bb57)) [h]
(= tmp60 (ite bb46_bb59 true (ite bb57_bb59 tmp58 tmp60))) [h]
(= tmp61 (ite tmp60 1 0)) [h]
(= _result.i.i tmp61) [h]
(= bb59_Non_Crossing_Biased_Climb.exit.i (or bb57_bb59 bb46_bb59)) [h]
(= result.i.i.0 (ite bb59_Non_Crossing_Biased_Climb.exit.i _result.i.i (ite bb71_Non_Crossing_Biased_Climb.exit.i _result.i.i5 result.i.i.0))) [h]
(and (= tmp55 (>= _Down_Separation _ret.i1.i.i)) (= tmp56 (or (and tmp55 (not true)) (and (not tmp55) true)))) [s]
(= _ret.i.i result.i.i.0) [s]
(and (= Non_Crossing_Biased_Climb.exit.i_bb75 (and tmp74 (or bb71_Non_Crossing_Biased_Climb.exit.i bb59_Non_Crossing_Biased_Climb.exit.i))) (= Non_Crossing_Biased_Climb.exit.i_bb78 (and (not tmp74) (or bb71_Non_Crossing_Biased_Climb.exit.i bb59_Non_Crossing_Biased_Climb.exit.i)))) [h]
(= tmp74 (!= _ret.i.i 0)) [s]
(= tmp77 (ite tmp76 1 0)) [h]
(= bb75_bb78 Non_Crossing_Biased_Climb.exit.i_bb75) [h]
(= tmp79 (ite Non_Crossing_Biased_Climb.exit.i_bb78 false (ite bb75_bb78 tmp76 tmp79))) [h]
(= tmp80 (ite tmp79 1 0)) [h]
(= _need_upward_RA.i tmp80) [h]
(= tmp76 (< _Own_Tracked_Alt _Other_Tracked_Alt)) [s]
(and (= bb78_bb82 (and tmp81 (or bb75_bb78 Non_Crossing_Biased_Climb.exit.i_bb78))) (= bb78_bb84 (and (not tmp81) (or bb75_bb78 Non_Crossing_Biased_Climb.exit.i_bb78)))) [h]
(= bb84_Inhibit_Biased_Climb.exit.i4.i bb78_bb84) [h]
(= bb82_Inhibit_Biased_Climb.exit.i4.i bb78_bb82) [h]
(= tmp85 (ite bb82_Inhibit_Biased_Climb.exit.i4.i tmp83 (ite bb84_Inhibit_Biased_Climb.exit.i4.i _Up_Separation tmp85))) [h]
(and (= tmp81 (!= _Climb_Inhibit 0)) (= tmp83 (+ _Up_Separation 100))) [s]
(= tmp87 (ite tmp86 1 0)) [h]
(and (= tmp86 (> tmp85 _Down_Separation)) (= _upward_preferred.i1.i tmp87)) [s]
(and (= Inhibit_Biased_Climb.exit.i4.i_bb89 (and tmp88 (or bb84_Inhibit_Biased_Climb.exit.i4.i bb82_Inhibit_Biased_Climb.exit.i4.i))) (= Inhibit_Biased_Climb.exit.i4.i_bb101 (and (not tmp88) (or bb84_Inhibit_Biased_Climb.exit.i4.i bb82_Inhibit_Biased_Climb.exit.i4.i)))) [h]
(= tmp88 (!= _upward_preferred.i1.i 0)) [s]
(= tmp103 (ite tmp102 1 0)) [h]
(and (= bb101_bb104 (and tmp102 Inhibit_Biased_Climb.exit.i4.i_bb101)) (= bb101_bb113 (and (not tmp102) Inhibit_Biased_Climb.exit.i4.i_bb101))) [h]
(= tmp106 (ite tmp105 1 0)) [h]
(and (= bb104_bb107 (and tmp105 bb101_bb104)) (= bb104_bb111 (and (not tmp105) bb101_bb104))) [h]
(and (= tmp108 (+ 0 0)) (ite bb104_bb107 (< 0 4) true)) [h]
(and (= tmp102 (< _Other_Tracked_Alt _Own_Tracked_Alt)) (= tmp105 (< _Other_Tracked_Alt _Own_Tracked_Alt))) [s]
(and (= tmp109 (MEM4 tmp108)) (= _ret.i.i6.i tmp109)) [s]
(= bb107_bb111 bb104_bb107) [h]
(= tmp112 (ite bb104_bb111 false (ite bb107_bb111 tmp110 tmp112))) [h]
(= bb111_bb113 (or bb107_bb111 bb104_bb111)) [h]
(= tmp114 (ite bb101_bb113 true (ite bb111_bb113 tmp112 tmp114))) [h]
(= tmp115 (ite tmp114 1 0)) [h]
(= _result.i3.i6 tmp115) [h]
(= bb113_Non_Crossing_Biased_Descend.exit.i (or bb111_bb113 bb101_bb113)) [h]
(= tmp110 (>= _Up_Separation _ret.i.i6.i)) [s]
(= tmp91 (ite tmp90 1 0)) [h]
(and (= bb89_bb92 (and tmp90 Inhibit_Biased_Climb.exit.i4.i_bb89)) (= bb89_bb98 (and (not tmp90) Inhibit_Biased_Climb.exit.i4.i_bb89))) [h]
(= tmp90 (< _Own_Tracked_Alt _Other_Tracked_Alt)) [s]
(and (= bb92_bb94 (and tmp93 bb89_bb92)) (= bb92_bb98 (and (not tmp93) bb89_bb92))) [h]
(and (= tmp95 (+ 0 0)) (ite bb92_bb94 (< 0 4) true)) [h]
(= tmp93 (>= _Cur_Vertical_Sep 300)) [s]
(and (= tmp96 (MEM4 tmp95)) (= _ret.i1.i5.i tmp96)) [s]
(= bb94_bb98 bb92_bb94) [h]
(= tmp99 (ite bb92_bb98 false (ite bb89_bb98 false (ite bb94_bb98 tmp97 tmp99)))) [h]
(= tmp100 (ite tmp99 1 0)) [h]
(= _result.i3.i tmp100) [h]
(= bb98_Non_Crossing_Biased_Descend.exit.i (or bb94_bb98 bb92_bb98 bb89_bb98)) [h]
(= result.i3.i.0 (ite bb98_Non_Crossing_Biased_Descend.exit.i _result.i3.i (ite bb113_Non_Crossing_Biased_Descend.exit.i _result.i3.i6 result.i3.i.0))) [h]
(= tmp97 (>= _Down_Separation _ret.i1.i5.i)) [s]
(= _ret.i7.i result.i3.i.0) [s]
(and (= Non_Crossing_Biased_Descend.exit.i_bb117 (and tmp116 (or bb113_Non_Crossing_Biased_Descend.exit.i bb98_Non_Crossing_Biased_Descend.exit.i))) (= Non_Crossing_Biased_Descend.exit.i_bb120 (and (not tmp116) (or bb113_Non_Crossing_Biased_Descend.exit.i bb98_Non_Crossing_Biased_Descend.exit.i)))) [h]
(= tmp116 (!= _ret.i7.i 0)) [s]
(= tmp119 (ite tmp118 1 0)) [h]
(= bb117_bb120 Non_Crossing_Biased_Descend.exit.i_bb117) [h]
(= tmp121 (ite Non_Crossing_Biased_Descend.exit.i_bb120 false (ite bb117_bb120 tmp118 tmp121))) [h]

(= tmp122 (ite tmp121 1 0)) [h]
(= _need_downward_RA.i tmp122) [h]

(= tmp118 (< _Other_Tracked_Alt _Own_Tracked_Alt)) [s]
(and (= bb120_bb124 (and tmp123 (or bb117_bb120 Non_Crossing_Biased_Descend.exit.i_bb120))) (= bb120_bb127 (and (not tmp123) (or bb117_bb120 Non_Crossing_Biased_Descend.exit.i_bb120)))) [h]

(= tmp125 (!= _need_downward_RA.i 0)) [h]
(and (= bb124_bb126 (and tmp125 bb120_bb124)) (= bb124_bb127 (and (not tmp125) bb120_bb124))) [h]

(= tmp123 (!= _need_upward_RA.i 0)) [s]
(and (= bb127_bb129 (and tmp128 (or bb124_bb127 bb120_bb127))) (= bb127_bb130 (and (not tmp128) (or bb124_bb127 bb120_bb127)))) [h]
(= tmp128 (!= _need_upward_RA.i 0)) [s]
(and (= bb130_bb132 (and tmp131 bb127_bb130)) (= bb130_bb133 (and (not tmp131) bb127_bb130))) [h]
(= tmp131 (!= _need_downward_RA.i 0)) [s]
(= bb133_bb134 bb130_bb133) [h]
(= _alt_sep.i10 0) [s]
(= bb132_bb134 bb130_bb132) [h]
(= alt_sep.i.0 (ite bb132_bb134 _alt_sep.i9 (ite bb133_bb134 _alt_sep.i10 alt_sep.i.0))) [h]
(= bb134_bb135 (or bb133_bb134 bb132_bb134)) [h]
(= _alt_sep.i8 1) [h]
(= bb129_bb135 bb127_bb129) [h]
(= alt_sep.i.1 (ite bb129_bb135 _alt_sep.i8 (ite bb134_bb135 alt_sep.i.0 alt_sep.i.1))) [h]
(= bb135_bb136 (or bb134_bb135 bb129_bb135)) [h]
(= _alt_sep.i9 2) [s]
(= bb126_bb136 bb124_bb126) [h]
(= alt_sep.i.2 (ite bb126_bb136 _alt_sep.i7 (ite bb135_bb136 alt_sep.i.1 alt_sep.i.2))) [h]
(= bb136_alt_sep_test.exit (or bb135_bb136 bb126_bb136)) [h]
(= alt_sep.i.3 (ite bb136_alt_sep_test.exit alt_sep.i.2 (ite bb35_alt_sep_test.exit _alt_sep.i (ite bb27_alt_sep_test.exit _alt_sep.i alt_sep.i.3)))) [h]
(= _alt_sep.i7 0) [s]
(= _ret.i alt_sep.i.3) [s]
(= _ret _ret.i) [s]
(or bb27_alt_sep_test.exit bb35_alt_sep_test.exit bb136_alt_sep_test.exit) [h]
(= _ret1 _ret) [s]
--------------------------------------------
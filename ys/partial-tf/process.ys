(set-evidence! true)
(set-verbosity! 3)

(define bb::bool)
(define bb7::bool)
(define bb9::bool)
(define bb10::bool)
(define bb11::bool)
(define bb13::bool)
(define bb14::bool)
(define bb16::bool)
(define bb17::bool)
(define bb19::bool)
(define bb20::bool)
(define bb21::bool)

(define bb_bb7::bool)
(define bb_bb11::bool)
(define bb7_bb9::bool)
(define bb7_bb10::bool)
(define bb9_bb10::bool)
(define bb10_bb11::bool)
(define bb11_bb13::bool)
(define bb11_bb14::bool)
(define bb13_bb14::bool)
(define bb14_bb16::bool)
(define bb14_bb17::bool)
(define bb16_bb21::bool)
(define bb17_bb19::bool)
(define bb17_bb20::bool)
(define bb19_bb20::bool)
(define bb20_bb21::bool)

(define _z::int)
(define _z0::int)
(define _lock::int)
(define tmp::bool)
(define tmp8::bool)
(define tmp12::bool)
(define x::int)
(define y::int)
(define _z1::int)
(define z.0::int)
(define z.1::int)
(define _z2::int)
(define z.2::int)
(define tmp15::bool)
(define _z3::int)
(define _lock4::int)
(define tmp18::bool)
(define _z5::int)
(define _lock6::int)
(define lock.0::int)
(define lock.1::int)
(define tmp22::bool)
(define tmp23::int)
(define tmp24::int)
(define _ret::int)

(define a1::bool)
(define a2::bool)
(define a3::bool)
(define a4::bool)
(define a5::bool)
(define a6::bool)
(define a7::bool)
(define a8::bool)
(define a9::bool)
(define a10::bool)
(define a11::bool)
(define a12::bool)
(define a13::bool)

;;# TF:
;;# nb hard expressions: 30
;;# nb soft expressions: 14
;;# PTF:
;;# nb hard expressions: 30
;;# nb soft expressions: 12

;;# -- Error-inducing Input: (and (= x 0) (= y -1) )
;;# MCS = {{4, 11}, {5}, {7, 11}, {12}, {14}, {17}}
;;# MUS = {{5, 11, 12, 14, 17}, {4, 5, 7, 12, 14, 17}}
;;# MCSes = {{17}, {14}, {12}, {5}, {7, 11}, {4, 11}}




;;# IE
(assert (and (= x 0) (= y -1))) 

 
;;# CFG
(assert (= bb true))
(assert (or (and bb7 bb_bb7 ) (and (not bb7) (not bb_bb7) ) ))
(assert (or (and bb9 bb7_bb9 ) (and (not bb9) (not bb7_bb9) ) ))
(assert (or (and bb10 bb9_bb10 (not bb7_bb10) ) (and bb10 (not bb9_bb10) bb7_bb10 ) (and (not bb10) (not bb9_bb10) (not bb7_bb10) ) ))
(assert (or (and bb11 bb10_bb11 (not bb_bb11) ) (and bb11 (not bb10_bb11) bb_bb11 ) (and (not bb11) (not bb10_bb11) (not bb_bb11) ) ))
(assert (or (and bb13 bb11_bb13 ) (and (not bb13) (not bb11_bb13) ) ))
(assert (or (and bb14 bb13_bb14 (not bb11_bb14) ) (and bb14 (not bb13_bb14) bb11_bb14 ) (and (not bb14) (not bb13_bb14) (not bb11_bb14) ) ))
(assert (or (and bb16 bb14_bb16 ) (and (not bb16) (not bb14_bb16) ) ))
(assert (or (and bb17 bb14_bb17 ) (and (not bb17) (not bb14_bb17) ) ))
(assert (or (and bb19 bb17_bb19 ) (and (not bb19) (not bb17_bb19) ) ))
(assert (or (and bb20 bb19_bb20 (not bb17_bb20) ) (and bb20 (not bb19_bb20) bb17_bb20 ) (and (not bb20) (not bb19_bb20) (not bb17_bb20) ) ))
(assert (or (and bb21 bb20_bb21 (not bb16_bb21) ) (and bb21 (not bb20_bb21) bb16_bb21 ) (and (not bb21) (not bb20_bb21) (not bb16_bb21) ) ))

;;# Body
(assert (or a1 (= _z 0)))
(assert (or a2 (= _lock 1)))
(assert (or a3 (= tmp (= x 0))))
(assert (or (and tmp bb_bb7 (not bb_bb11) ) (and (not tmp) bb_bb11 (not bb_bb7) ) (and (not bb) (not bb_bb7) (not bb_bb11) ) ))
(assert (or a4 (= tmp8 (= y 0))))
(assert (or (and tmp8 bb7_bb9 (not bb7_bb10) ) (and (not tmp8) bb7_bb10 (not bb7_bb9) ) (and (not bb7) (not bb7_bb9) (not bb7_bb10) ) ))

;;#(assert (or a5 (= _z1 1)))
(assert (= _z1 1))

(assert (= bb9 bb9_bb10))
(assert (= z.0 (ite bb9_bb10 _z1 _z)))
(assert (= bb10 bb10_bb11))
(assert (= z.1 (ite bb10_bb11 z.0 _z)))
(assert (or a6 (= tmp12 (/= y 0))))
(assert (or (and tmp12 bb11_bb13 (not bb11_bb14) ) (and (not tmp12) bb11_bb14 (not bb11_bb13) ) (and (not bb11) (not bb11_bb13) (not bb11_bb14) ) ))
(assert (or a7 (= _z2 y)))
(assert (= bb13 bb13_bb14))
(assert (= z.2 (ite bb13_bb14 _z2 z.1)))
(assert (or a8 (= tmp15 (/= x 0))))
(assert (or (and tmp15 bb14_bb16 (not bb14_bb17) ) (and (not tmp15) bb14_bb17 (not bb14_bb16) ) (and (not bb14) (not bb14_bb16) (not bb14_bb17) ) ))
(assert (or a9 (= tmp18 (> z.2 0))))
(assert (or (and tmp18 bb17_bb19 (not bb17_bb20) ) (and (not tmp18) bb17_bb20 (not bb17_bb19) ) (and (not bb17) (not bb17_bb19) (not bb17_bb20) ) ))

;;#(assert (or a10 (= _z5 3) ))

;;#(assert (or a11 (= _lock6 0)))
(assert (= _lock6 0))

(assert (= bb19 bb19_bb20))
(assert (= lock.0 (ite bb19_bb20 _lock6 _lock)))
(assert (= bb20 bb20_bb21))
;;#(assert (or a12 (= _z3 2)))

;;#(assert (or a13 (= _lock4 0)))
(assert (= _lock4 0))

(assert (= bb16 bb16_bb21))
(assert (= lock.1 (ite bb16_bb21 _lock4 lock.0)))
(assert (= tmp22 (= lock.1 0)))
(assert (= tmp23 (ite tmp22 1 0)))
;;#(assert+ (= _ret ) 1)

;;# POST-COND
(assert (= lock.1 0))



(assert+ (not a1) 1)
(assert+ (not a2) 1)
(assert+ (not a3) 1)
(assert+ (not a4) 1)
;;#(assert+ (not a5) 1)
(assert+ (not a6) 1)
(assert+ (not a7) 1)
(assert+ (not a8) 1)
(assert+ (not a9) 1)
;.#(assert+ (not a10) 1)
;;#(assert+ (not a11) 1)
;.#(assert+ (not a12) 1)
;;#(assert+ (not a13) 1)


(assert (not a8))
(assert (not a9))
(assert (not a7))
(assert (not a2))
(assert (or (not a1) (not a6)))
(assert (or (not a4) (not a6)))


(max-sat)
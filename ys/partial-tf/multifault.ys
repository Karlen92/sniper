(set-evidence! true)
(set-verbosity! 3)

(define bb::bool)
(define bb4::bool)
(define bb7::bool)
(define bb9::bool)
(define bb12::bool)
(define bb14::bool)
(define bb15::bool)

(define bb_bb4::bool)
(define bb_bb7::bool)
(define bb4_bb15::bool)
(define bb7_bb9::bool)
(define bb7_bb12::bool)
(define bb9_bb14::bool)
(define bb12_bb14::bool)
(define bb14_bb15::bool)

(define x::int)
(define _y::int)
(define tmp5::int)
(define tmp6::int)
(define tmp13::int)
(define tmp17::int)
(define tmp10::int)
(define tmp11::int)
(define _y1::int)
(define _y2::int)
(define _y3::int)
(define y.0::int)
(define y.1::int)

(define tmp::bool)
(define tmp8::bool)
(define tmp16::bool)


(define a1::bool)
(define a2::bool)
(define a3::bool)
(define a4::bool)
(define a5::bool)
(define a6::bool)
(define a7::bool)
(define a8::bool)
(define a9::bool)
(define a10::bool)
(define a11::bool)



;;# TF:
;;# nb hard expressions: 17
;;# nb soft expressions: 12
;;# -- Error-inducing Input: (= x 1)
;;# MCS: {{4}, {5, 6}, {7, 10}, {8}}
;;# MUS: {{4, 6, 8, 10}, {4, 6, 7, 8}, {4, 5, 8, 10}, {4, 5, 7, 8}}
;;# -- Error-inducing Input: (= x 2)
;;# MCS: {{4}, {5, 6}, {7, 8}, {10}}
;;# MUS: {{4, 6, 8, 10}, {4, 6, 7, 10}, {4, 5, 8, 10}, {4, 5, 7, 10}}
;;# MCSes: {{4}, {8, 10}, {7, 10}, {7, 8}, {5, 6}}

;;#------
;;# PTF:
;;# nb hard expressions: 
;;# nb soft expressions: 
;;# -- Error-inducing Input: (= x 1)
;;# MCS = {{8}, {4}, {7, 10}}
;;# -- Error-inducing Input: (= x 2)
;;# MCS = {10}, {4}, {7, 8}



;;#EI:
;;#(assert (= x 1))
(assert (= x 2))


(assert (= bb true))
(assert (or (and bb4 bb_bb4 ) (and (not bb4) (not bb_bb4) ) ))
(assert (or (and bb7 bb_bb7 ) (and (not bb7) (not bb_bb7) ) ))
(assert (or (and bb9 bb7_bb9 ) (and (not bb9) (not bb7_bb9) ) ))
(assert (or (and bb12 bb7_bb12 ) (and (not bb12) (not bb7_bb12) ) ))
(assert (or (and bb14 bb12_bb14 (not bb9_bb14) ) (and bb14 (not bb12_bb14) bb9_bb14 ) (and (not bb14) (not bb12_bb14) (not bb9_bb14) ) ))
(assert (or (and bb15 bb14_bb15 (not bb4_bb15) ) (and bb15 (not bb14_bb15) bb4_bb15 ) (and (not bb15) (not bb14_bb15) (not bb4_bb15) ) ))
(assert (or (and tmp bb_bb4 (not bb_bb7) ) (and (not tmp) bb_bb7 (not bb_bb4) ) (and (not bb) (not bb_bb4) (not bb_bb7) ) ))
(assert (or (and tmp8 bb7_bb9 (not bb7_bb12) ) (and (not tmp8) bb7_bb12 (not bb7_bb9) ) (and (not bb7) (not bb7_bb9) (not bb7_bb12) ) ))
(assert (= bb12 bb12_bb14))
(assert (= bb9 bb9_bb14))
(assert (= y.0 (ite bb9_bb14 _y2 _y3)))
(assert (= bb14 bb14_bb15))
(assert (= bb4 bb4_bb15))
(assert (= y.1 (ite bb4_bb15 _y1 y.0)))
(assert (= tmp16 (= y.1 42)))
(assert (= tmp17 (ite tmp16 1 0)))


(assert (or a1 (= _y 40)))
(assert (or a2 (= tmp (= x 0))))
(assert (or a3 (= tmp8 (= x 1))))
(assert (or a4 (= tmp13 (+ _y 1 ))))
(assert (or a5 (= _y3 tmp13)))

(assert (or a6 (= tmp10 (+ _y x ))))
(assert (or a7 (= tmp11 (+ tmp10 2 ))))
(assert (or a8 (= _y2 tmp11)))

;;#(assert (or a9 (= tmp5 (+ _y x ))))
;;#(assert (or a10 (= tmp6 (+ tmp5 2 ))))
;;#(assert (or a11 (= _y1 tmp6)))
(assert (or (not bb4) (and (= _y 40) (= _y1 42) (= x 0))))


(assert (= tmp17 1))


(assert+ (not a1) 1)
(assert+ (not a2) 1)
(assert+ (not a3) 1)
(assert+ (not a4) 1)
(assert+ (not a5) 1)
(assert+ (not a6) 1)
(assert+ (not a7) 1)
(assert+ (not a8) 1)
;;#(assert+ (not a9) 1)
;;#(assert+ (not a10) 1)
;;#(assert+ (not a11) 1)


;;# MCS for x==1
;;# (assert (not a7))
;;# (assert (not a8))
;;# (assert (not a6))
;;# (assert (not a1))
;;# (assert (or (not a3) (not a5)))
;;# (assert (or (not a3) (not a4)))

;;# MCS for x==2
(assert (not a5))
(assert (not a4))
(assert (not a1))
(assert (or (not a3) (not a7)))
(assert (or (not a3) (not a8)))
(assert (or (not a3) (not a6)))




(max-sat)